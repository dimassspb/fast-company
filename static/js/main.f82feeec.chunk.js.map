{"version":3,"sources":["reportWebVitals.js","app/layouts/login.jsx","app/components/tableHeader.jsx","app/components/tableBody.jsx","app/components/table.jsx","app/components/bookmark.jsx","app/components/qualitie.jsx","app/components/qualitiesList.jsx","app/components/usersTable.jsx","app/components/searchStatus.jsx","app/components/pagination.jsx","app/components/listGroup.jsx","app/api/fake.api/professions.api.js","app/api/fake.api/user.api.js","app/api/index.js","app/components/usersList.jsx","app/utils/paginate.js","app/components/user.jsx","app/components/userPage.jsx","app/layouts/users.jsx","app/layouts/main.jsx","app/components/navBar.jsx","app/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Login","TableHeader","onSort","selectedSort","columns","renderSortArrow","currentPath","path","order","className","Object","keys","map","column","onClick","item","undefined","role","scope","name","TableBody","data","renderContent","component","_","get","_id","Table","children","BookMark","status","rest","Qualitie","color","QualitiesList","qualities","UserTable","users","onToggleBookMark","onDelete","user","to","professions","completedMeetings","rate","bookmark","delete","searchStatus","length","text","Pagination","onPageChange","itemsCount","pageSize","currentPage","pageCount","Math","ceil","pages","range","page","ListGroup","items","valueProperty","contentProperty","onItemSelect","selectedItem","Array","isArray","defaultProps","professionsObject","doctor","waiter","physics","engineer","actor","cook","tedious","strange","buller","alcoholic","handsome","uncertain","profession","API","fetchAll","Promise","resolve","window","setTimeout","getById","id","find","UsersList","useState","setCurrentPage","setProfessions","selectedProf","setSelectedProf","sortBy","setSortBy","useEffect","api","filteredUsers","filter","JSON","stringify","count","usersCrop","pageNumber","startIndex","slice","take","value","paginate","orderBy","pageIndex","User","history","useHistory","replace","UserPage","userId","currentUser","setCurrentUser","Users","useParams","setUsers","Main","NavBar","App","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f82feeec.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\n\r\nconst Login = () => {\r\n    return <h1>Login Page</h1>;\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\r\n    const handleSort = (item) => {\r\n        if (selectedSort.path === item) {\r\n            onSort({ ...selectedSort, order: selectedSort.order === 'asc' ? 'desc' : 'asc' });\r\n        } else {\r\n            onSort({ path: item, order: 'asc' });\r\n        }\r\n    };\r\n\r\n    const renderSortArrow = (selectedSort, currentPath) => {\r\n        if (selectedSort.path === currentPath) {\r\n            if (selectedSort.order === 'asc') {\r\n                return <i className=\"bi bi-caret-down-fill\"></i>;\r\n            } else {\r\n                return <i className=\"bi bi-caret-up-fill\"></i>;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                {Object.keys(columns).map((column) => (\r\n                    <th\r\n                        key={column}\r\n                        onClick={columns[column].path ? () => handleSort(columns[column].path) : undefined}\r\n                        {...{ role: columns[column].path && 'button' }}\r\n                        scope=\"col\">\r\n                        {columns[column].name}\r\n                        {renderSortArrow(selectedSort, columns[column].path)}\r\n                    </th>\r\n                ))}\r\n            </tr>\r\n        </thead>\r\n    );\r\n};\r\n\r\nTableHeader.propTypes = {\r\n    onSort: PropTypes.func.isRequired,\r\n    selectedSort: PropTypes.object.isRequired,\r\n    columns: PropTypes.object.isRequired\r\n};\r\n\r\nexport default TableHeader;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nconst TableBody = ({ data, columns }) => {\r\n    const renderContent = (item, column) => {\r\n        if (columns[column].component) {\r\n            const component = columns[column].component;\r\n            if (typeof component === 'function') {\r\n                return component(item);\r\n            }\r\n            return component;\r\n        }\r\n        return _.get(item, columns[column].path);\r\n    };\r\n\r\n    return (\r\n        <tbody>\r\n            {data.map((item) => (\r\n                <tr key={item._id}>\r\n                    {Object.keys(columns).map((column) => (\r\n                        <td key={column}>{renderContent(item, column)}</td>\r\n                    ))}\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n    );\r\n};\r\n\r\nTableBody.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    columns: PropTypes.object.isRequired\r\n};\r\n\r\nexport default TableBody;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TableHeader from './tableHeader';\r\nimport TableBody from './tableBody';\r\nconst Table = ({ onSort, selectedSort, columns, data, children }) => {\r\n    return (\r\n        <table className=\"table\">\r\n            {children || (\r\n                <>\r\n                    <TableHeader {...{ onSort, selectedSort, columns }} />\r\n                    <TableBody {...{ columns, data }} />\r\n                </>\r\n            )}\r\n        </table>\r\n    );\r\n};\r\n\r\nTable.propTypes = {\r\n    onSort: PropTypes.func,\r\n    selectedSort: PropTypes.object,\r\n    columns: PropTypes.object,\r\n    data: PropTypes.array,\r\n    children: PropTypes.array\r\n};\r\n\r\nexport default Table;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BookMark = ({ status, ...rest }) => {\r\n    return (\r\n        <button {...rest}>\r\n            <i className={'bi bi-bookmark' + (status ? '-heart-fill' : '')}></i>\r\n        </button>\r\n    );\r\n};\r\nBookMark.propTypes = {\r\n    status: PropTypes.bool\r\n};\r\n\r\nexport default BookMark;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Qualitie = ({ name, color }) => {\r\n    const classes = 'badge m-1 bg-';\r\n    return <span className={classes + color}>{name}</span>;\r\n};\r\n\r\nQualitie.propTypes = {\r\n    name: PropTypes.string,\r\n    color: PropTypes.string\r\n};\r\n\r\nexport default Qualitie;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Qualitie from './qualitie';\r\n\r\nconst QualitiesList = ({ qualities }) => {\r\n    return (\r\n        <>\r\n            {qualities.map((item) => (\r\n                <Qualitie key={item._id} {...item} />\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nQualitiesList.propTypes = {\r\n    qualities: PropTypes.array.isRequired\r\n};\r\n\r\nexport default QualitiesList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport Table from './table';\r\nimport BookMark from './bookmark';\r\nimport QualitiesList from './qualitiesList';\r\n\r\nconst UserTable = ({ users, onSort, selectedSort, onToggleBookMark, onDelete }) => {\r\n    const columns = {\r\n        name: {\r\n            path: 'name',\r\n            name: 'Имя',\r\n            component: (user) => <Link to={`users/${user._id}`}>{user.name}</Link>\r\n        },\r\n        qualities: { name: 'Качества', component: (user) => <QualitiesList qualities={user.qualities} /> },\r\n        professions: { path: 'profession.name', name: 'Профессия' },\r\n        completedMeetings: { path: 'completedMeetings', name: 'Встретился, раз' },\r\n        rate: { path: 'rate', name: 'Оценка' },\r\n        bookmark: {\r\n            path: 'bookmark',\r\n            name: 'Избранное',\r\n            component: (user) => <BookMark onClick={() => onToggleBookMark(user._id)} status={user.bookmark} />\r\n        },\r\n        delete: {\r\n            component: (user) => (\r\n                <button className=\"btn btn-danger\" onClick={() => onDelete(user._id)}>\r\n            Delete\r\n                </button>\r\n            )\r\n        }\r\n    };\r\n\r\n    return <Table onSort={onSort} selectedSort={selectedSort} columns={columns} data={users} />;\r\n};\r\n\r\nUserTable.propTypes = {\r\n    users: PropTypes.array.isRequired,\r\n    onSort: PropTypes.func.isRequired,\r\n    selectedSort: PropTypes.object.isRequired,\r\n    onToggleBookMark: PropTypes.func.isRequired,\r\n    onDelete: PropTypes.func.isRequired\r\n};\r\n\r\nexport default UserTable;\r\n","import React from 'react';\r\n\r\nconst searchStatus = ({ length }) => {\r\n    let text = `${length} человек тусанет с тобой сегодня`;\r\n    let className = 'badge bg-primary';\r\n\r\n    if (length <= 4 && length > 1) {\r\n        text = `${length} человека тусанут с тобой сегодня`;\r\n    }\r\n    if (length === 0) {\r\n        text = 'Никто с тобой не тусанет';\r\n        className = 'badge bg-danger';\r\n    }\r\n\r\n    return (\r\n        <h2>\r\n            <span className={className}>{text}</span>\r\n        </h2>\r\n    );\r\n};\r\n\r\nexport default searchStatus;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nconst Pagination = ({ onPageChange, itemsCount, pageSize, currentPage }) => {\r\n    const pageCount = Math.ceil(itemsCount / pageSize);\r\n    if (pageCount === 1) return null;\r\n    const pages = _.range(1, pageCount + 1);\r\n\r\n    return (\r\n        <nav>\r\n            <ul className=\"pagination\">\r\n                {pages.map((page) => (\r\n                    <li className={'page-item ' + (page === currentPage ? 'active' : '')} key={page}>\r\n                        <a className=\"page-link\" role=\"button\" onClick={() => onPageChange(page)}>\r\n                            {page}\r\n                        </a>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\nPagination.propTypes = {\r\n    onPageChange: PropTypes.func.isRequired,\r\n    itemsCount: PropTypes.number.isRequired,\r\n    pageSize: PropTypes.number.isRequired,\r\n    currentPage: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ListGroup = ({ items, valueProperty, contentProperty, onItemSelect, selectedItem }) => {\r\n    if (!Array.isArray(items)) {\r\n        return (\r\n            <ul className=\"list-group\">\r\n                {Object.keys(items).map((item) => (\r\n                    <li\r\n                        key={items[item][valueProperty]}\r\n                        role=\"button\"\r\n                        className={'list-group-item' + (items[item] === selectedItem ? ' active' : '')}\r\n                        onClick={() => onItemSelect(items[item])}>\r\n                        {items[item][contentProperty]}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        );\r\n    }\r\n    return (\r\n        <ul className=\"list-group\">\r\n            {items.map((item) => (\r\n                <li\r\n                    key={item[valueProperty]}\r\n                    role=\"button\"\r\n                    className={'list-group-item' + (item === selectedItem ? ' active' : '')}\r\n                    onClick={() => onItemSelect(item)}>\r\n                    {item[contentProperty]}\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nListGroup.defaultProps = {\r\n    valueProperty: '_id',\r\n    contentProperty: 'name'\r\n};\r\n\r\nListGroup.propTypes = {\r\n    items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n    valueProperty: PropTypes.string.isRequired,\r\n    contentProperty: PropTypes.string.isRequired,\r\n    onItemSelect: PropTypes.func,\r\n    selectedItem: PropTypes.object\r\n};\r\n\r\nexport default ListGroup;\r\n","export const professionsObject = {\r\n    doctor: { _id: '67rdca3eeb7f6fgeed471818', name: 'Доктор' },\r\n    waiter: { _id: '67rdca3eeb7f6fgeed471820', name: 'Официант' },\r\n    physics: { _id: '67rdca3eeb7f6fgeed471814', name: 'Физик' },\r\n    engineer: { _id: '67rdca3eeb7f6fgeed471822', name: 'Инженер' },\r\n    actor: { _id: '67rdca3eeb7f6fgeed471824', name: 'Актер' },\r\n    cook: { _id: '67rdca3eeb7f6fgeed471829', name: 'Повар' }\r\n};\r\nexport const professions = [\r\n    { _id: '67rdca3eeb7f6fgeed471818', name: 'Доктор' },\r\n    { _id: '67rdca3eeb7f6fgeed471820', name: 'Официант' },\r\n    { _id: '67rdca3eeb7f6fgeed471814', name: 'Физик' },\r\n    { _id: '67rdca3eeb7f6fgeed471822', name: 'Инженер' },\r\n    { _id: '67rdca3eeb7f6fgeed471824', name: 'Актер' },\r\n    { _id: '67rdca3eeb7f6fgeed471829', name: 'Повар' }\r\n];\r\nconst fetchAll = () =>\r\n    new Promise((resolve) => {\r\n        window.setTimeout(() => {\r\n            resolve(professions);\r\n        }, 2000);\r\n    });\r\n\r\nexport default {\r\n    fetchAll\r\n};\r\n","import { professionsObject as professions } from './professions.api';\r\nconst qualities = {\r\n    tedious: {\r\n        _id: '67rdca3eeb7f6fgeed471198',\r\n        name: 'Нудила',\r\n        color: 'primary'\r\n    },\r\n    strange: {\r\n        _id: '67rdca3eeb7f6fgeed471100',\r\n        name: 'Странный',\r\n        color: 'secondary'\r\n    },\r\n    buller: {\r\n        _id: '67rdca3eeb7f6fgeed4711012',\r\n        name: 'Троль',\r\n        color: 'success'\r\n    },\r\n    alcoholic: {\r\n        _id: '67rdca3eeb7f6fgeed471101',\r\n        name: 'Алкоголик',\r\n        color: 'danger'\r\n    },\r\n    handsome: {\r\n        _id: '67rdca3eeb7f6fgeed471102',\r\n        name: 'Красавчик',\r\n        color: 'info'\r\n    },\r\n    uncertain: {\r\n        _id: '67rdca3eeb7f6fgeed471102',\r\n        name: 'Неуверенный',\r\n        color: 'dark'\r\n    }\r\n};\r\n\r\nconst users = [\r\n    {\r\n        _id: '67rdca3eeb7f6fgeed471815',\r\n        name: 'Джон Дориан',\r\n        profession: professions.doctor,\r\n        qualities: [qualities.tedious, qualities.uncertain, qualities.strange],\r\n        completedMeetings: 36,\r\n        rate: 2.5,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: '67rdca3eeb7f6fgeed471816',\r\n        name: 'Кокс',\r\n        profession: professions.doctor,\r\n        qualities: [qualities.buller, qualities.handsome, qualities.alcoholic],\r\n        completedMeetings: 15,\r\n        rate: 2.5,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: '67rdca3eeb7f6fgeed471817',\r\n        name: 'Боб Келсо',\r\n        profession: professions.doctor,\r\n        qualities: [qualities.buller],\r\n        completedMeetings: 247,\r\n        rate: 3.5,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: '67rdca3eeb7f6fgeed471818',\r\n        name: 'Рэйчел Грин',\r\n        profession: professions.waiter,\r\n        qualities: [qualities.uncertain],\r\n        completedMeetings: 148,\r\n        rate: 3.5,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: '67rdca3eeb7f6fgeed471819',\r\n        name: 'Шелдон Купер',\r\n        profession: professions.physics,\r\n        qualities: [qualities.strange, qualities.tedious],\r\n        completedMeetings: 37,\r\n        rate: 4.6,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: '67rdca3eeb7f6fgeed471820',\r\n        name: 'Леонард Хофстедтер',\r\n        profession: professions.physics,\r\n        qualities: [qualities.strange, qualities.uncertain],\r\n        completedMeetings: 147,\r\n        rate: 3.5,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: '67rdca3eeb7f6fgeed471821',\r\n        name: 'Говард Воловиц',\r\n        profession: professions.engineer,\r\n        qualities: [qualities.strange, qualities.tedious],\r\n        completedMeetings: 72,\r\n        rate: 3.5,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: '67rdca3eeb7f6fgeed471822',\r\n        name: 'Никола Тесла',\r\n        profession: professions.engineer,\r\n        qualities: [qualities.handsome],\r\n        completedMeetings: 72,\r\n        rate: 5,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: '67rdca3eeb7f6fgeed471823',\r\n        name: 'Моника Геллер',\r\n        profession: professions.cook,\r\n        qualities: [qualities.strange, qualities.uncertain],\r\n        completedMeetings: 17,\r\n        rate: 4.5,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: '67rdca3eeb7f6fgeed471824',\r\n        name: 'Рататуй',\r\n        profession: professions.cook,\r\n        qualities: [qualities.handsome, qualities.buller],\r\n        completedMeetings: 17,\r\n        rate: 4.5,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: '67rdca3eeb7f6fgeed47181f',\r\n        name: 'Джоуи Триббиани',\r\n        profession: professions.actor,\r\n        qualities: [qualities.uncertain, qualities.strange],\r\n        completedMeetings: 434,\r\n        rate: 3.5,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: '67rdca3eeb7f6fgeed47181r',\r\n        name: 'Брэд Питт',\r\n        profession: professions.actor,\r\n        qualities: [qualities.handsome],\r\n        completedMeetings: 434,\r\n        rate: 5,\r\n        bookmark: false\r\n    }\r\n];\r\n\r\nconst fetchAll = () =>\r\n    new Promise((resolve) => {\r\n        window.setTimeout(() => {\r\n            resolve(users);\r\n        }, 2000);\r\n    });\r\n\r\nconst getById = (id) =>\r\n    new Promise((resolve) => {\r\n        window.setTimeout(() => {\r\n            resolve(users.find((user) => user._id === id));\r\n        }, 2000);\r\n    });\r\n\r\nexport default {\r\n    fetchAll,\r\n    getById\r\n};\r\n","import users from './fake.api/user.api';\r\nimport professions from './fake.api/professions.api';\r\nconst API = {\r\n    users,\r\n    professions\r\n};\r\nexport default API;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { paginate } from '../utils/paginate';\r\nimport UsersTable from '../components/usersTable';\r\nimport SearchStatus from '../components/searchStatus';\r\nimport Pagination from '../components/pagination';\r\nimport ListGroup from '../components/listGroup';\r\nimport api from '../api';\r\nimport _ from 'lodash';\r\n\r\nconst UsersList = ({ users, onDelete, onToggleBookMark }) => {\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [professions, setProfessions] = useState();\r\n    const [selectedProf, setSelectedProf] = useState();\r\n    const [sortBy, setSortBy] = useState({ path: 'name', order: 'asc' });\r\n    const pageSize = 8;\r\n\r\n    useEffect(() => {\r\n        if (!professions) {\r\n            api.professions.fetchAll().then((data) => setProfessions(data));\r\n        }\r\n    }, [professions]);\r\n\r\n    useEffect(() => {\r\n        setCurrentPage(1);\r\n    }, [selectedProf]);\r\n\r\n    const handleProfessionSelect = (item) => {\r\n        setSelectedProf(item);\r\n    };\r\n\r\n    const handlePageChange = (pageIndex) => {\r\n        setCurrentPage(pageIndex);\r\n    };\r\n\r\n    const handleSort = (item) => {\r\n        setSortBy(item);\r\n    };\r\n\r\n    if (users) {\r\n        const clearFilter = () => {\r\n            setSelectedProf();\r\n        };\r\n\r\n        const filteredUsers = selectedProf\r\n            ? users.filter((user) => JSON.stringify(user.profession) === JSON.stringify(selectedProf))\r\n            : users;\r\n\r\n        const count = filteredUsers.length;\r\n        const sortedUsers = _.orderBy(filteredUsers, [sortBy.path], [sortBy.order]);\r\n        const usersCrop = paginate(sortedUsers, currentPage, pageSize);\r\n\r\n        return (\r\n            <div className=\"d-flex\">\r\n                {professions && (\r\n                    <div className=\"d-flex flex-column flex-shrink-0 p-3\">\r\n                        <ListGroup items={professions} onItemSelect={handleProfessionSelect} selectedItem={selectedProf} />\r\n                        <button className=\"btn btn-secondary mt-2\" onClick={clearFilter}>\r\n              Очистить\r\n                        </button>\r\n                    </div>\r\n                )}\r\n                <div className=\"d-flex flex-column\">\r\n                    <SearchStatus length={count} />\r\n                    {count > 0 && (\r\n                        <UsersTable\r\n                            users={usersCrop}\r\n                            onSort={handleSort}\r\n                            selectedSort={sortBy}\r\n                            onToggleBookMark={onToggleBookMark}\r\n                            onDelete={onDelete}\r\n                        />\r\n                    )}\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <Pagination\r\n                            itemsCount={count}\r\n                            pageSize={pageSize}\r\n                            onPageChange={handlePageChange}\r\n                            currentPage={currentPage}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return <h1 className=\"d-flex justify-content-center align-items-center\">Loading...</h1>;\r\n};\r\n\r\nUsersList.propTypes = {\r\n    users: PropTypes.array,\r\n    onDelete: PropTypes.func,\r\n    onToggleBookMark: PropTypes.func\r\n};\r\nexport default UsersList;\r\n","import _ from 'lodash';\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n    const startIndex = (pageNumber - 1) * pageSize;\r\n    return _(items).slice(startIndex).take(pageSize).value();\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport QualitiesList from './qualitiesList';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst User = ({ name, qualities, profession, completedMeetings, rate }) => {\r\n    const history = useHistory();\r\n\r\n    const handleSave = () => {\r\n        history.replace('/users');\r\n    };\r\n\r\n    return (\r\n        <div className=\"d-flex flex-column m-3\">\r\n            <h1 className=\"mb-3\">{name}</h1>\r\n            <h2>{`Профессия: ${profession.name}`}</h2>\r\n            <ul>\r\n                <QualitiesList qualities={qualities} />\r\n            </ul>\r\n            <span>{`completedMeetings: ${completedMeetings}`}</span>\r\n            <h3 className=\"my-3\">{`Rate: ${rate}/5`}</h3>\r\n            <div>\r\n                <button className=\"btn btn-success\" onClick={() => handleSave()}>\r\n          Все пользователи\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nUser.propTypes = {\r\n    name: PropTypes.string,\r\n    qualities: PropTypes.array,\r\n    profession: PropTypes.object,\r\n    completedMeetings: PropTypes.number,\r\n    rate: PropTypes.number,\r\n    _id: PropTypes.string,\r\n    onDelete: PropTypes.func,\r\n    onToggleBookMark: PropTypes.func,\r\n    status: PropTypes.bool\r\n};\r\n\r\nexport default User;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport API from '../api';\r\nimport User from '../components/user';\r\n\r\nconst UserPage = ({ userId }) => {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    useEffect(() => {\r\n        if (!currentUser) {\r\n            API.users.getById(userId).then((data) => setCurrentUser(data));\r\n        }\r\n    }, [currentUser]);\r\n\r\n    if (currentUser) {\r\n        return <User {...currentUser} />;\r\n    }\r\n    return <h2>Loading...</h2>;\r\n};\r\n\r\nUserPage.propTypes = {\r\n    userId: PropTypes.string\r\n};\r\n\r\nexport default UserPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport UsersList from '../components/usersList';\r\nimport UserPage from '../components/userPage';\r\nimport api from '../api';\r\n\r\nconst Users = () => {\r\n    const params = useParams();\r\n    const { userId } = params;\r\n\r\n    const [users, setUsers] = useState();\r\n    useEffect(() => {\r\n        api.users.fetchAll().then((data) => setUsers(data));\r\n    }, []);\r\n\r\n    const handleDelete = (userId) => {\r\n        return setUsers(users.filter((user) => user._id !== userId));\r\n    };\r\n\r\n    const handleToggleBookMark = (userId) => {\r\n        setUsers(\r\n            users.filter((user) => {\r\n                if (user._id === userId) {\r\n                    user.bookmark = !user.bookmark;\r\n                    return user;\r\n                }\r\n                return user;\r\n            })\r\n        );\r\n    };\r\n\r\n    return userId\r\n        ? (\r\n            <UserPage userId={userId} />\r\n        )\r\n        : (\r\n            <UsersList users={users} onDelete={handleDelete} onToggleBookMark={handleToggleBookMark} />\r\n        );\r\n};\r\n\r\nexport default Users;\r\n","import React from 'react';\r\n\r\nconst Main = () => {\r\n    return <h1>Main Page</h1>;\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <ul className=\"nav nav-tabs m-3\">\r\n            <li className=\"nav-item\">\r\n                <Link to=\"/\" className=\"nav-link\">\r\n          Main\r\n                </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link to=\"/login\" className=\"nav-link\">\r\n          Login\r\n                </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link to=\"/users\" className=\"nav-link\">\r\n          Users\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router';\r\n\r\nimport Login from './layouts/login';\r\nimport Users from './layouts/users';\r\nimport Main from './layouts/main';\r\nimport NavBar from './components/navBar';\r\n\r\nconst App = () => {\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            <Switch>\r\n                <Route path=\"/login\" component={Login} />\r\n                <Route path=\"/users/:userId?\" component={Users} />\r\n                <Route exact path=\"/\" component={Main} />\r\n                <Redirect to=\"/\" />\r\n            </Switch>\r\n      ;\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport App from './app/App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}