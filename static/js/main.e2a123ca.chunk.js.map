{"version":3,"sources":["reportWebVitals.js","app/api/fake.api/professions.api.js","app/api/fake.api/user.api.js","app/api/index.js","app/components/quality.jsx","app/components/qualitiesList.jsx","app/components/userPage.jsx","app/components/pagination.jsx","app/components/groupList.jsx","app/components/searchStatus.jsx","app/components/bookmark.jsx","app/components/tableBody.jsx","app/components/tableHeader.jsx","app/components/table.jsx","app/components/usersTable.jsx","app/components/searchInput.js","app/components/usersList.jsx","app/utils/paginate.js","app/layouts/users.jsx","app/components/textField.jsx","app/layouts/login.jsx","app/utils/validator.js","app/layouts/main.jsx","app/components/navBar.jsx","app/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","professionsObject","doctor","_id","name","waiter","physics","engineer","actor","cook","qualities","tedious","color","strange","buller","alcoholic","handsome","uncertain","users","profession","professions","completedMeetings","rate","bookmark","API","fetchAll","Promise","resolve","window","setTimeout","getById","id","find","user","Quality","className","QualitiesList","map","qual","UserPage","userId","history","useHistory","useState","setUser","useEffect","api","data","type","onClick","push","Pagination","itemsCount","pageSize","onPageChange","currentPage","pagesCount","Math","ceil","pages","_","range","page","GroupList","items","valueProperty","contentProperty","onItemSelect","selectedItem","Array","isArray","item","role","Object","keys","defaultProps","SearchStatus","length","number","lastOne","Number","toString","slice","indexOf","renderPhrase","BookMark","status","rest","TableBody","columns","renderContent","column","component","get","path","TableHeader","onSort","selectedSort","rendeSortArrow","currentPath","order","undefined","scope","Table","children","UserTable","onToggleBookMark","onDelete","to","delete","SearchInput","value","onChange","placeholder","UsersList","setCurrentPage","setProfession","selectedProf","setSelectedProf","sortBy","setSortBy","setUsers","searchUsers","setSearchUsers","clearFilter","filteredUsers","filter","JSON","stringify","toLowerCase","includes","trim","count","usersCrop","pageNumber","startIndex","take","paginate","orderBy","target","newArray","pageIndex","Users","useParams","TextField","label","error","showPassword","setShowPassword","htmlFor","prevState","Login","email","password","setData","errors","setErrors","handleChange","e","validatorConfig","isRequired","message","isEmail","isCapitalSymbol","isContainDigit","min","validate","config","validateMethod","statusValidate","test","fieldName","validator","isValid","onSubmit","preventDefault","console","log","disabled","Main","NavBar","App","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2a123ca.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","export const professionsObject = {\n    doctor: { _id: '67rdca3eeb7f6fgeed471818', name: 'Доктор' },\n    waiter: { _id: '67rdca3eeb7f6fgeed471820', name: 'Официант' },\n    physics: { _id: '67rdca3eeb7f6fgeed471814', name: 'Физик' },\n    engineer: { _id: '67rdca3eeb7f6fgeed471822', name: 'Инженер' },\n    actor: { _id: '67rdca3eeb7f6fgeed471824', name: 'Актер' },\n    cook: { _id: '67rdca3eeb7f6fgeed471829', name: 'Повар' }\n};\nexport const professions = [\n    { _id: '67rdca3eeb7f6fgeed471818', name: 'Доктор' },\n    { _id: '67rdca3eeb7f6fgeed471820', name: 'Официант' },\n    { _id: '67rdca3eeb7f6fgeed471814', name: 'Физик' },\n    { _id: '67rdca3eeb7f6fgeed471822', name: 'Инженер' },\n    { _id: '67rdca3eeb7f6fgeed471824', name: 'Актер' },\n    { _id: '67rdca3eeb7f6fgeed471829', name: 'Повар' }\n];\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function() {\n            resolve(professionsObject);\n        }, 2000);\n    });\n\nexport default {\n    fetchAll\n};\n","import { professionsObject as professions } from './professions.api';\nconst qualities = {\n    tedious: {\n        _id: '67rdca3eeb7f6fgeed471198',\n        name: 'Нудила',\n        color: 'primary'\n    },\n    strange: {\n        _id: '67rdca3eeb7f6fgeed471100',\n        name: 'Странный',\n        color: 'secondary'\n    },\n    buller: {\n        _id: '67rdca3eeb7f6fgeed4711012',\n        name: 'Троль',\n        color: 'success'\n    },\n    alcoholic: {\n        _id: '67rdca3eeb7f6fgeed471101',\n        name: 'Алкоголик',\n        color: 'danger'\n    },\n    handsome: {\n        _id: '67rdca3eeb7f6fgeed471102',\n        name: 'Красавчик',\n        color: 'info'\n    },\n    uncertain: {\n        _id: '67rdca3eeb7f6fgeed471102',\n        name: 'Неуверенный',\n        color: 'dark'\n    }\n};\n\nconst users = [\n    {\n        _id: '67rdca3eeb7f6fgeed471815',\n        name: 'Джон Дориан',\n        profession: professions.doctor,\n        qualities: [qualities.tedious, qualities.uncertain, qualities.strange],\n        completedMeetings: 36,\n        rate: 2.5,\n        bookmark: false\n    },\n    {\n        _id: '67rdca3eeb7f6fgeed471816',\n        name: 'Кокс',\n        profession: professions.doctor,\n        qualities: [qualities.buller, qualities.handsome, qualities.alcoholic],\n        completedMeetings: 15,\n        rate: 2.5,\n        bookmark: false\n    },\n    {\n        _id: '67rdca3eeb7f6fgeed471817',\n        name: 'Боб Келсо',\n        profession: professions.doctor,\n        qualities: [qualities.buller],\n        completedMeetings: 247,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: '67rdca3eeb7f6fgeed471818',\n        name: 'Рэйчел Грин',\n        profession: professions.waiter,\n        qualities: [qualities.uncertain],\n        completedMeetings: 148,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: '67rdca3eeb7f6fgeed471819',\n        name: 'Шелдон Купер',\n        profession: professions.physics,\n        qualities: [qualities.strange, qualities.tedious],\n        completedMeetings: 37,\n        rate: 4.6,\n        bookmark: false\n    },\n    {\n        _id: '67rdca3eeb7f6fgeed471820',\n        name: 'Леонард Хофстедтер',\n        profession: professions.physics,\n        qualities: [qualities.strange, qualities.uncertain],\n        completedMeetings: 147,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: '67rdca3eeb7f6fgeed471821',\n        name: 'Говард Воловиц',\n        profession: professions.engineer,\n        qualities: [qualities.strange, qualities.tedious],\n        completedMeetings: 72,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: '67rdca3eeb7f6fgeed471822',\n        name: 'Никола Тесла',\n        profession: professions.engineer,\n        qualities: [qualities.handsome],\n        completedMeetings: 72,\n        rate: 5,\n        bookmark: false\n    },\n    {\n        _id: '67rdca3eeb7f6fgeed471823',\n        name: 'Моника Геллер',\n        profession: professions.cook,\n        qualities: [qualities.strange, qualities.uncertain],\n        completedMeetings: 17,\n        rate: 4.5,\n        bookmark: false\n    },\n    {\n        _id: '67rdca3eeb7f6fgeed471824',\n        name: 'Рататуй',\n        profession: professions.cook,\n        qualities: [qualities.handsome, qualities.buller],\n        completedMeetings: 17,\n        rate: 4.5,\n        bookmark: false\n    },\n    {\n        _id: '67rdca3eeb7f6fgeed47181f',\n        name: 'Джоуи Триббиани',\n        profession: professions.actor,\n        qualities: [qualities.uncertain, qualities.strange],\n        completedMeetings: 434,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: '67rdca3eeb7f6fgeed47181r',\n        name: 'Брэд Питт',\n        profession: professions.actor,\n        qualities: [qualities.handsome],\n        completedMeetings: 434,\n        rate: 5,\n        bookmark: false\n    }\n];\n\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function() {\n            resolve(users);\n        }, 2000);\n    });\n\nconst getById = (id) =>\n    new Promise((resolve) => {\n        window.setTimeout(function() {\n            resolve(users.find((user) => user._id === id));\n        }, 1000);\n    });\nexport default {\n    fetchAll,\n    getById\n};\n","import users from './fake.api/user.api';\nimport professions from './fake.api/professions.api';\nconst API = {\n    users,\n    professions\n};\nexport default API;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nconst Quality = ({ color, name, _id }) => {\n    return (\n        <span className={'badge m-1 bg-' + color} key={_id}>\n            {name}\n        </span>\n    );\n};\nQuality.propTypes = {\n    color: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    _id: PropTypes.string.isRequired\n};\n\nexport default Quality;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Quality from './quality';\n\nconst QualitiesList = ({ qualities }) => {\n    return (\n        <>\n            {qualities.map((qual) => (\n                <Quality key={qual._id} {...qual} />\n            ))}\n        </>\n    );\n};\n\nQualitiesList.propTypes = {\n    qualities: PropTypes.array\n};\n\nexport default QualitiesList;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport api from '../api';\nimport QualitiesList from './qualitiesList';\nimport { useHistory } from 'react-router-dom';\n\nconst UserPage = ({ userId }) => {\n    const history = useHistory();\n    const [user, setUser] = useState();\n    useEffect(() => {\n        api.users.getById(userId).then((data) => setUser(data));\n    });\n    const handleClick = () => {\n        history.push('/users');\n    };\n    if (user) {\n        return (\n            <div>\n                <h1> {user.name}</h1>\n                <h2>Профессия: {user.profession.name}</h2>\n                <QualitiesList qualities={user.qualities} />\n                <p>completedMeetings: {user.completedMeetings}</p>\n                <h2>Rate: {user.rate}</h2>\n                <button\n                    type=\"button\"\n                    className=\"btn btn-success\"\n                    onClick={handleClick}\n                >\n                    {' '}\n                    Все Пользователи\n                </button>\n            </div>\n        );\n    } else {\n        return <h4>Loading...</h4>;\n    }\n};\n\nUserPage.propTypes = {\n    userId: PropTypes.string.isRequired\n};\n\nexport default UserPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\n    const pagesCount = Math.ceil(itemsCount / pageSize);\n    const pages = _.range(1, pagesCount + 1);\n\n    if (pagesCount === 1) return null;\n    return (\n        <nav>\n            <ul className=\"pagination\">\n                {pages.map((page) => (\n                    <li\n                        key={page}\n                        className={\n                            'page-item ' +\n                            (page === currentPage ? 'active' : '')\n                        }\n                    >\n                        <a\n                            className=\"page-link\"\n                            onClick={() => {\n                                onPageChange(page);\n                            }}\n                        >\n                            {page}\n                        </a>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    );\n};\nPagination.propTypes = {\n    itemsCount: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired,\n    currentPage: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired\n};\n\nexport default Pagination;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst GroupList = ({\n    items,\n    valueProperty,\n    contentProperty,\n    onItemSelect,\n    selectedItem\n}) => {\n    if (!Array.isArray(items)) {\n        return (\n            <ul className=\"list-group\">\n                {Object.keys(items).map((item) => (\n                    <li\n                        key={items[item][valueProperty]}\n                        className={\n                            'list-group-item' +\n                            (items[item] === selectedItem ? ' active' : '')\n                        }\n                        onClick={() => onItemSelect(items[item])}\n                        role=\"button\"\n                    >\n                        {items[item][contentProperty]}\n                    </li>\n                ))}\n            </ul>\n        );\n    }\n    return (\n        <ul className=\"list-group\">\n            {items.map((item) => (\n                <li\n                    key={item[valueProperty]}\n                    className={\n                        'list-group-item' +\n                        (item === selectedItem ? ' active' : '')\n                    }\n                    onClick={() => onItemSelect(item)}\n                    role=\"button\"\n                >\n                    {item[contentProperty]}\n                </li>\n            ))}\n        </ul>\n    );\n};\nGroupList.defaultProps = {\n    valueProperty: '_id',\n    contentProperty: 'name'\n};\nGroupList.propTypes = {\n    items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    valueProperty: PropTypes.string.isRequired,\n    contentProperty: PropTypes.string.isRequired,\n    onItemSelect: PropTypes.func,\n    selectedItem: PropTypes.object\n};\n\nexport default GroupList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nconst SearchStatus = ({ length }) => {\n    const renderPhrase = (number) => {\n        const lastOne = Number(number.toString().slice(-1));\n        if (number > 4 && number < 15) {\n            return 'человек тусанет';\n        }\n        if (lastOne === 1) return 'человек тусанет';\n        if ([2, 3, 4].indexOf(lastOne) >= 0) return 'человека тусанут';\n        return 'человек тусанет';\n    };\n    return (\n        <h2>\n            <span\n                className={'badge ' + (length > 0 ? 'bg-primary' : 'bg-danger')}\n            >\n                {length > 0\n                    ? `${length + ' ' + renderPhrase(length)}   с тобой сегодня`\n                    : 'Никто с тобой не тусанет'}\n            </span>\n        </h2>\n    );\n};\nSearchStatus.propTypes = {\n    length: PropTypes.number\n};\n\nexport default SearchStatus;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nconst BookMark = ({ status, ...rest }) => {\n    return (\n        <button {...rest}>\n            <i className={'bi bi-bookmark' + (status ? '-heart-fill' : '')}></i>\n        </button>\n    );\n};\nBookMark.propTypes = {\n    status: PropTypes.bool\n};\n\nexport default BookMark;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nconst TableBody = ({ data, columns }) => {\n    const renderContent = (item, column) => {\n        if (columns[column].component) {\n            const component = columns[column].component;\n            if (typeof component === 'function') {\n                return component(item);\n            }\n            return component;\n        }\n        return _.get(item, columns[column].path);\n    };\n    return (\n        <tbody>\n            {data.map((item) => (\n                <tr key={item._id}>\n                    {Object.keys(columns).map((column) => (\n                        <td key={column}>{renderContent(item, column)}</td>\n                    ))}\n                </tr>\n            ))}\n        </tbody>\n    );\n};\n\nTableBody.propTypes = {\n    data: PropTypes.array.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableBody;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\n    const handleSort = (item) => {\n        if (selectedSort.path === item) {\n            onSort({\n                ...selectedSort,\n                order: selectedSort.order === 'asc' ? 'desc' : 'asc'\n            });\n        } else {\n            onSort({ path: item, order: 'asc' });\n        }\n    };\n    const rendeSortArrow = (selectedSort, currentPath) => {\n        if (selectedSort.path === currentPath) {\n            if (selectedSort.order === 'asc') {\n                return <i className=\"bi bi-caret-down-fill\"></i>;\n            } else {\n                return <i className=\"bi bi-caret-up-fill\"></i>;\n            }\n        }\n        return null;\n    };\n\n    return (\n        <thead>\n            <tr>\n                {Object.keys(columns).map((column) => (\n                    <th\n                        key={column}\n                        onClick={\n                            columns[column].path\n                                ? () => handleSort(columns[column].path)\n                                : undefined\n                        }\n                        {...{ role: columns[column].path && 'button' }}\n                        scope=\"col\"\n                    >\n                        {columns[column].name}{' '}\n                        {rendeSortArrow(selectedSort, columns[column].path)}\n                    </th>\n                ))}\n            </tr>\n        </thead>\n    );\n};\nTableHeader.propTypes = {\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TableBody from './tableBody';\nimport TableHeader from './tableHeader';\n\nconst Table = ({ onSort, selectedSort, columns, data, children }) => {\n    return (\n        <table className=\"table\">\n            {children || (\n                <>\n                    <TableHeader {...{ onSort, selectedSort, columns }} />\n                    <TableBody {...{ columns, data }} />\n                </>\n            )}\n        </table>\n    );\n};\nTable.propTypes = {\n    onSort: PropTypes.func,\n    selectedSort: PropTypes.object,\n    columns: PropTypes.object,\n    data: PropTypes.array,\n    children: PropTypes.array\n};\n\nexport default Table;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport BookMark from './bookmark';\nimport QualitiesList from './qualitiesList';\nimport Table from './table';\nimport { Link } from 'react-router-dom';\n\nconst UserTable = ({\n    users,\n    onSort,\n    selectedSort,\n    onToggleBookMark,\n    onDelete,\n    ...rest\n}) => {\n    const columns = {\n        name: {\n            path: 'name',\n            name: 'Имя',\n            component: (user) => (\n                <Link to={`/users/${user._id}`}>{user.name}</Link>\n            )\n        },\n        qualities: {\n            name: 'Качества',\n            component: (user) => <QualitiesList qualities={user.qualities} />\n        },\n        professions: { path: 'profession.name', name: 'Профессия' },\n        completedMeetings: {\n            path: 'completedMeetings',\n            name: 'Встретился, раз'\n        },\n        rate: { path: 'rate', name: 'Оценка' },\n        bookmark: {\n            path: 'bookmark',\n            name: 'Избранное',\n            component: (user) => (\n                <BookMark\n                    status={user.bookmark}\n                    onClick={() => onToggleBookMark(user._id)}\n                />\n            )\n        },\n        delete: {\n            component: (user) => (\n                <button\n                    onClick={() => onDelete(user._id)}\n                    className=\"btn btn-danger\"\n                >\n                    delete\n                </button>\n            )\n        }\n    };\n    return (\n        <Table\n            onSort={onSort}\n            selectedSort={selectedSort}\n            columns={columns}\n            data={users}\n        />\n    );\n};\n\nUserTable.propTypes = {\n    users: PropTypes.array.isRequired,\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    onToggleBookMark: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired\n};\n\nexport default UserTable;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SearchInput = ({ value, onChange }) => {\r\n    return (\r\n        <div className=\"input-group mb-3\">\r\n            <input\r\n                className=\"form-control\"\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                value={value}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nSearchInput.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchInput;\r\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { paginate } from '../utils/paginate';\nimport Pagination from './pagination';\nimport api from '../api';\nimport GroupList from './groupList';\nimport SearchStatus from './searchStatus';\nimport UserTable from './usersTable';\nimport _ from 'lodash';\nimport SearchInput from './searchInput';\nconst UsersList = () => {\n    const [currentPage, setCurrentPage] = useState(1);\n    const [professions, setProfession] = useState();\n    const [selectedProf, setSelectedProf] = useState();\n    const [sortBy, setSortBy] = useState({ path: 'name', order: 'asc' });\n    const pageSize = 8;\n\n    const [users, setUsers] = useState();\n    const [searchUsers, setSearchUsers] = useState('');\n\n    useEffect(() => {\n        api.users.fetchAll().then((data) => setUsers(data));\n    }, []);\n\n    useEffect(() => {\n        if (searchUsers) clearFilter();\n    }, [searchUsers]);\n\n    const clearFilter = () => {\n        setSelectedProf();\n    };\n\n    const handleDelete = (userId) => {\n        setUsers(users.filter((user) => user._id !== userId));\n    };\n    const handleToggleBookMark = (id) => {\n        const newArray = users.map((user) => {\n            if (user._id === id) {\n                return { ...user, bookmark: !user.bookmark };\n            }\n            return user;\n        });\n        setUsers(newArray);\n    };\n\n    useEffect(() => {\n        api.professions.fetchAll().then((data) => setProfession(data));\n    }, []);\n\n    useEffect(() => {\n        setCurrentPage(1);\n    }, [selectedProf]);\n\n    const handleProfessionSelect = (item) => {\n        setSelectedProf(item);\n        setSearchUsers('');\n    };\n\n    const handlePageChange = (pageIndex) => {\n        setCurrentPage(pageIndex);\n    };\n    const handleSort = (item) => {\n        setSortBy(item);\n    };\n\n    const handleSearch = ({ target }) => {\n        setSearchUsers(target.value);\n    };\n\n    if (users) {\n        const filteredUsers = selectedProf\n            ? users.filter(\n                (user) =>\n                    JSON.stringify(user.profession) ===\n                      JSON.stringify(selectedProf)\n            )\n            : searchUsers\n                ? users.filter((user) =>\n                    user.name.toLowerCase().includes(searchUsers.toLowerCase().trim())\n                )\n                : users;\n\n        const count = filteredUsers.length;\n        const sortedUsers = _.orderBy(\n            filteredUsers,\n            [sortBy.path],\n            [sortBy.order]\n        );\n        const usersCrop = paginate(sortedUsers, currentPage, pageSize);\n        const clearFilter = () => {\n            setSelectedProf();\n        };\n\n        return (\n            <div className=\"d-flex\">\n                {professions && (\n                    <div className=\"d-flex flex-column flex-shrink-0 p-3\">\n                        <GroupList\n                            selectedItem={selectedProf}\n                            items={professions}\n                            onItemSelect={handleProfessionSelect}\n                        />\n                        <button\n                            className=\"btn btn-secondary mt-2\"\n                            onClick={clearFilter}\n                        >\n                            {' '}\n                            Очистить\n                        </button>\n                    </div>\n                )}\n                <div className=\"d-flex flex-column\">\n                    <SearchStatus length={count} />\n                    <SearchInput value={searchUsers} onChange={handleSearch} />\n                    {count > 0 && (\n                        <UserTable\n                            users={usersCrop}\n                            onSort={handleSort}\n                            selectedSort={sortBy}\n                            onDelete={handleDelete}\n                            onToggleBookMark={handleToggleBookMark}\n                        />\n                    )}\n                    <div className=\"d-flex justify-content-center\">\n                        <Pagination\n                            itemsCount={count}\n                            pageSize={pageSize}\n                            currentPage={currentPage}\n                            onPageChange={handlePageChange}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    return <h4>Loading...</h4>;\n};\nUsersList.propTypes = {\n    users: PropTypes.array\n};\n\nexport default UsersList;\n","import _ from 'lodash';\n\nexport function paginate(items, pageNumber, pageSize) {\n    const startIndex = (pageNumber - 1) * pageSize;\n    return _(items).slice(startIndex).take(pageSize).value();\n}\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport UserPage from '../components/userPage';\nimport UsersList from '../components/usersList';\nconst Users = () => {\n    const params = useParams();\n    const { userId } = params;\n    return <>{userId ? <UserPage userId={userId} /> : <UsersList />}</>;\n};\n\nexport default Users;\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TextField = ({ label, type, name, value, onChange, error }) => {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const getInputClasses = () => {\r\n        return 'form-control' + (error ? ' is-invalid' : '');\r\n    };\r\n\r\n    const toggleShowPassword = () => {\r\n        setShowPassword((prevState) => !prevState);\r\n    };\r\n\r\n    return (\r\n        <div className=\"mb-4\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <div className=\"input-group has-validation\">\r\n                <input\r\n                    className={getInputClasses()}\r\n                    type={showPassword ? 'text' : type}\r\n                    id={name}\r\n                    name={name}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n                {type === 'password' && (\r\n                    <button\r\n                        className=\"btn btn-outline-secondary\"\r\n                        type=\"button\"\r\n                        onClick={toggleShowPassword}\r\n                    >\r\n                        <i\r\n                            className={\r\n                                'bi bi-eye' + (showPassword ? '-slash' : '')\r\n                            }\r\n                        ></i>\r\n                    </button>\r\n                )}\r\n                {error && <div className=\"invalid-feedback\">{error}</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nTextField.defaultProps = {\r\n    type: 'text'\r\n};\r\nTextField.propTypes = {\r\n    label: PropTypes.string,\r\n    type: PropTypes.string,\r\n    name: PropTypes.string,\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    error: PropTypes.string\r\n};\r\n\r\nexport default TextField;\r\n","import React, { useState, useEffect } from 'react';\nimport TextField from '../components/textField';\nimport { validator } from '../utils/validator';\n\nconst Login = () => {\n    const [data, setData] = useState({ email: '', password: '' });\n    const [errors, setErrors] = useState({});\n\n    const handleChange = (e) => {\n        setData((prevState) => ({\n            ...prevState,\n            [e.target.name]: e.target.value\n        }));\n    };\n\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: 'Электронная почта обязательна для заполнения'\n            },\n            isEmail: {\n                message: 'Email введен некоректно'\n            }\n        },\n        password: {\n            isRequired: {\n                message: 'Пароль обязателен для заполнения'\n            },\n            isCapitalSymbol: {\n                message: 'Пароль должен содержать хотя бы одну заглавную букву'\n            },\n            isContainDigit: {\n                message: 'Пароль должен содержать хотя бы одно число'\n            },\n            min: {\n                message: 'Пароль должен состоять минимум из 8 символов',\n                value: 8\n            }\n        }\n    };\n\n    useEffect(() => {\n        validate();\n    }, [data]);\n\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        console.log(data);\n    };\n\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\n                    <h3 className=\"mb-4\">Login</h3>\n                    <form onSubmit={handleSubmit}>\n                        <TextField\n                            label=\"Электронная почта\"\n                            name=\"email\"\n                            value={data.email}\n                            onChange={handleChange}\n                            error={errors.email}\n                        />\n                        <TextField\n                            label=\"Пароль\"\n                            type=\"password\"\n                            name=\"password\"\n                            value={data.password}\n                            onChange={handleChange}\n                            error={errors.password}\n                        />\n                        <button className=\"btn btn-primary w-100 mx-auto\" type=\"submit\" disabled={!isValid}>\n                            Submit\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;\n","export function validator(data, config) {\r\n    const errors = {};\r\n    function validate(validateMethod, data, config) {\r\n        let statusValidate;\r\n        switch (validateMethod) {\r\n        case 'isRequired':\r\n            statusValidate = data.trim() === '';\r\n            break;\r\n        case 'isEmail': {\r\n            const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\r\n            statusValidate = !emailRegExp.test(data);\r\n            break;\r\n        }\r\n        case 'isCapitalSymbol': {\r\n            const capoitalRegExp = /[A-Z]+/g;\r\n            statusValidate = !capoitalRegExp.test(data);\r\n            break;\r\n        }\r\n        case 'isContainDigit': {\r\n            const digitRegExp = /\\d+/g;\r\n            statusValidate = !digitRegExp.test(data);\r\n            break;\r\n        }\r\n        case 'min': {\r\n            statusValidate = data.length < config.value;\r\n            break;\r\n        }\r\n        default:\r\n            break;\r\n        }\r\n        if (statusValidate) return config.message;\r\n    }\r\n    for (const fieldName in data) {\r\n        for (const validateMethod in config[fieldName]) {\r\n            const error = validate(\r\n                validateMethod, data[fieldName], config[fieldName][validateMethod]);\r\n            if (error && !errors[fieldName]) {\r\n                errors[fieldName] = error;\r\n            }\r\n        }\r\n    }\r\n    return errors;\r\n}\r\n","import React from 'react';\n\nconst Main = () => {\n    return <h1> Main Page</h1>;\n};\n\nexport default Main;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nconst NavBar = () => {\n    return (\n        <ul className=\"nav\">\n            <li className=\"nav-item\">\n                <Link className=\"nav-link \" aria-current=\"page\" to=\"/\">\n                    Main\n                </Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link className=\"nav-link \" aria-current=\"page\" to=\"/login\">\n                    Login\n                </Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link className=\"nav-link \" aria-current=\"page\" to=\"/users\">\n                    Users\n                </Link>\n            </li>\n        </ul>\n    );\n};\n\nexport default NavBar;\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nimport Users from './layouts/users';\nimport Login from './layouts/login';\nimport Main from './layouts/main';\nimport NavBar from './components/navBar';\n\nfunction App() {\n    return (\n        <div>\n            <NavBar />\n            <Switch>\n                <Route path=\"/users/:userId?\" component={Users} />\n                <Route path=\"/login\" component={Login} />\n                <Route path=\"/\" exact component={Main} />\n                <Redirect to=\"/\" />\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './app/App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}