{"version":3,"sources":["reportWebVitals.js","app/api/fake.api/professions.api.js","app/api/fake.api/user.api.js","app/api/fake.api/qualities.api.js","app/api/fake.api/comments.api.js","app/api/index.js","app/components/ui/qualities/quality.jsx","app/components/ui/qualities/qualitiesList.jsx","app/utils/validator.js","app/components/common/form/textArea.jsx","app/components/common/form/selectField.jsx","app/components/ui/commentForm.jsx","app/utils/formatDate.js","app/components/ui/comment.jsx","app/components/ui/comments.jsx","app/components/ui/userCard.jsx","app/components/ui/loader.jsx","app/components/page/userPage/index.js","app/components/page/userPage/userPage.jsx","app/components/common/pagination.jsx","app/components/common/groupList.jsx","app/components/ui/searchStatus.jsx","app/components/common/bookmark.jsx","app/components/common/table/tableBody.jsx","app/components/common/table/tableHeader.jsx","app/components/common/table/table.jsx","app/components/ui/usersTable.jsx","app/components/searchInput.js","app/components/page/usersListPage/index.js","app/components/page/usersListPage/usersListPage.jsx","app/utils/paginate.js","app/components/common/form/textField.jsx","app/components/common/form/radioField.jsx","app/components/common/form/multiSelectField.jsx","app/components/ui/editForm.jsx","app/components/page/editUserPage/index.js","app/components/page/editUserPage/editUserPage.jsx","app/layouts/users.jsx","app/components/common/form/checkBoxField.jsx","app/components/ui/loginForm.jsx","app/components/ui/registerForm.jsx","app/layouts/login.jsx","app/layouts/main.jsx","app/components/ui/navBar.jsx","app/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","professionsObject","doctor","_id","name","waiter","physics","engineer","actor","cook","professions","fetchAll","Promise","resolve","window","setTimeout","qualities","tedious","color","strange","buller","alcoholic","handsome","uncertain","users","profession","completedMeetings","rate","bookmark","localStorage","getItem","setItem","JSON","stringify","parse","update","id","data","userIndex","findIndex","u","getById","find","user","comments","userId","pageId","content","created_at","API","fetchCommentsForUser","filter","c","add","newComment","Math","random","toString","substr","Date","now","push","remove","newComments","x","Quality","className","QualitiesList","map","rest","validator","config","errors","validate","validateMethod","statusValidate","trim","test","length","value","message","fieldName","error","TextArea","label","rows","onChange","htmlFor","target","SelectField","defaultOption","options","optionsArray","Array","isArray","Object","keys","key","disabled","option","CommentForm","useState","comment","setData","setErrors","handleChange","prevState","validatorConfig","isRequired","min","isValid","useEffect","row","onClick","addZero","num","String","getMonth","index","formatDate","date","Number","diff","year","getFullYear","month","day","getDate","hours","getHours","getMinutes","round","Comment","author","src","substring","alt","width","height","Comments","modifiedComments","setModifiedComments","sortedComments","sort","a","b","UserCard","setUsers","setComments","api","to","role","Loader","loading","override","css","size","UserPage","useParams","setUser","Pagination","itemsCount","pageSize","onPageChange","currentPage","pagesCount","ceil","pages","_","range","page","GroupList","items","valueProperty","contentProperty","onItemSelect","selectedItem","item","defaultProps","SearchStatus","number","lastOne","slice","indexOf","renderPhrase","BookMark","status","TableBody","columns","renderContent","column","component","path","get","TableHeader","onSort","selectedSort","rendeSortArrow","currentPath","order","undefined","scope","Table","children","UserTable","onToggleBookMark","onDelete","delete","SearchInput","type","placeholder","UsersListPage","setCurrentPage","setProfession","selectedProf","setSelectedProf","sortBy","setSortBy","searchUsers","setSearchUsers","clearFilter","filteredUsers","toLowerCase","includes","count","usersCrop","pageNumber","startIndex","take","paginate","orderBy","newArray","pageIndex","TextField","showPassword","setShowPassword","RadioField","checked","MultiSelectField","defaultValue","isMulti","closeMenuOnSelect","classNamePrefix","EditForm","email","gender","quality","setQualities","setProfessions","isEmail","onSubmit","e","preventDefault","qualityIds","updatedQualities","values","updatedData","EditUserPage","Users","edit","CheckBoxField","LoginForm","password","stayOn","schema","yup","shape","required","matches","catch","err","console","log","RegisterForm","sex","licence","isCapitalSymbol","isContainDigit","Login","formType","setFormType","toggleFormType","prev","Main","NavBar","App","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a06d6102.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","export const professionsObject = {\r\n    doctor: { _id: '67rdca3eeb7f6fgeed471818', name: 'Доктор' },\r\n    waiter: { _id: '67rdca3eeb7f6fgeed471820', name: 'Официант' },\r\n    physics: { _id: '67rdca3eeb7f6fgeed471814', name: 'Физик' },\r\n    engineer: { _id: '67rdca3eeb7f6fgeed471822', name: 'Инженер' },\r\n    actor: { _id: '67rdca3eeb7f6fgeed471824', name: 'Актер' },\r\n    cook: { _id: '67rdca3eeb7f6fgeed471829', name: 'Повар' }\r\n};\r\nexport const professionsForTest = {\r\n    doctor: { _id: '67rdca3eeb7f6fgeed471818', name: 'Доктор' },\r\n    waiter: { _id: '67rdca3eeb7f6fgeed471820', name: 'Официант' },\r\n    physics: { _id: '67rdca3eeb7f6fgeed471814', name: 'Физик' },\r\n    engineer: { _id: '67rdca3eeb7f6fgeed471822', name: 'Инженер' },\r\n    actor: { _id: '67rdca3eeb7f6fgeed471824', name: 'Актер' },\r\n    cook: { _id: '67rdca3eeb7f6fgeed471829', name: 'Повар' }\r\n};\r\nexport const professions = [\r\n    { _id: '67rdca3eeb7f6fgeed471818', name: 'Доктор' },\r\n    { _id: '67rdca3eeb7f6fgeed471820', name: 'Официант' },\r\n    { _id: '67rdca3eeb7f6fgeed471814', name: 'Физик' },\r\n    { _id: '67rdca3eeb7f6fgeed471822', name: 'Инженер' },\r\n    { _id: '67rdca3eeb7f6fgeed471824', name: 'Актер' },\r\n    { _id: '67rdca3eeb7f6fgeed471829', name: 'Повар' }\r\n];\r\nconst fetchAll = () =>\r\n    new Promise((resolve) => {\r\n        window.setTimeout(function() {\r\n            resolve(professions);\r\n        }, 2000);\r\n    });\r\n\r\nexport default {\r\n    fetchAll\r\n};\r\n","import { professionsObject as professions } from './professions.api';\r\nconst qualities = {\r\n    tedious: {\r\n        _id: '67rdca3eeb7f6fgeed471198',\r\n        name: 'Нудила',\r\n        color: 'primary'\r\n    },\r\n    strange: {\r\n        _id: '67rdca3eeb7f6fgeed471100',\r\n        name: 'Странный',\r\n        color: 'secondary'\r\n    },\r\n    buller: {\r\n        _id: '67rdca3eeb7f6fgeed4711012',\r\n        name: 'Троль',\r\n        color: 'success'\r\n    },\r\n    alcoholic: {\r\n        _id: '67rdca3eeb7f6fgeed471101',\r\n        name: 'Алкоголик',\r\n        color: 'danger'\r\n    },\r\n    handsome: {\r\n        _id: '67rdca3eeb7f6fgeed471102',\r\n        name: 'Красавчик',\r\n        color: 'info'\r\n    },\r\n    uncertain: {\r\n        _id: '67rdca3eeb7f6fgeed471102',\r\n        name: 'Неуверенный',\r\n        color: 'dark'\r\n    }\r\n};\r\n\r\nconst users = [\r\n    {\r\n        _id: '67rdca3eeb7f6fgeed471815',\r\n        name: 'Джон Дориан',\r\n        profession: professions.doctor,\r\n        qualities: [qualities.tedious, qualities.uncertain, qualities.strange],\r\n        completedMeetings: 36,\r\n        rate: 2.5,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: '67rdca3eeb7f6fgeed471816',\r\n        name: 'Кокс',\r\n        profession: professions.doctor,\r\n        qualities: [qualities.buller, qualities.handsome, qualities.alcoholic],\r\n        completedMeetings: 15,\r\n        rate: 2.5,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: '67rdca3eeb7f6fgeed471817',\r\n        name: 'Боб Келсо',\r\n        profession: professions.doctor,\r\n        qualities: [qualities.buller],\r\n        completedMeetings: 247,\r\n        rate: 3.5,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: '67rdca3eeb7f6fgeed471818',\r\n        name: 'Рэйчел Грин',\r\n        profession: professions.waiter,\r\n        qualities: [qualities.uncertain],\r\n        completedMeetings: 148,\r\n        rate: 3.5,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: '67rdca3eeb7f6fgeed471819',\r\n        name: 'Шелдон Купер',\r\n        profession: professions.physics,\r\n        qualities: [qualities.strange, qualities.tedious],\r\n        completedMeetings: 37,\r\n        rate: 4.6,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: '67rdca3eeb7f6fgeed471820',\r\n        name: 'Леонард Хофстедтер',\r\n        profession: professions.physics,\r\n        qualities: [qualities.strange, qualities.uncertain],\r\n        completedMeetings: 147,\r\n        rate: 3.5,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: '67rdca3eeb7f6fgeed471821',\r\n        name: 'Говард Воловиц',\r\n        profession: professions.engineer,\r\n        qualities: [qualities.strange, qualities.tedious],\r\n        completedMeetings: 72,\r\n        rate: 3.5,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: '67rdca3eeb7f6fgeed471822',\r\n        name: 'Никола Тесла',\r\n        profession: professions.engineer,\r\n        qualities: [qualities.handsome],\r\n        completedMeetings: 72,\r\n        rate: 5,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: '67rdca3eeb7f6fgeed471823',\r\n        name: 'Моника Геллер',\r\n        profession: professions.cook,\r\n        qualities: [qualities.strange, qualities.uncertain],\r\n        completedMeetings: 17,\r\n        rate: 4.5,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: '67rdca3eeb7f6fgeed471824',\r\n        name: 'Рататуй',\r\n        profession: professions.cook,\r\n        qualities: [qualities.handsome, qualities.buller],\r\n        completedMeetings: 17,\r\n        rate: 4.5,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: '67rdca3eeb7f6fgeed47181f',\r\n        name: 'Джоуи Триббиани',\r\n        profession: professions.actor,\r\n        qualities: [qualities.uncertain, qualities.strange],\r\n        completedMeetings: 434,\r\n        rate: 3.5,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: '67rdca3eeb7f6fgeed47181r',\r\n        name: 'Брэд Питт',\r\n        profession: professions.actor,\r\n        qualities: [qualities.handsome],\r\n        completedMeetings: 434,\r\n        rate: 5,\r\n        bookmark: false\r\n    }\r\n];\r\n\r\nif (!localStorage.getItem('users')) {\r\n    localStorage.setItem('users', JSON.stringify(users));\r\n}\r\n\r\nconst fetchAll = () =>\r\n    new Promise((resolve) => {\r\n        window.setTimeout(function() {\r\n            resolve(JSON.parse(localStorage.getItem('users')));\r\n        }, 2000);\r\n    });\r\n\r\nconst update = (id, data) =>\r\n    new Promise((resolve) => {\r\n        const users = JSON.parse(localStorage.getItem('users'));\r\n        const userIndex = users.findIndex((u) => u._id === id);\r\n        users[userIndex] = { ...users[userIndex], ...data };\r\n        localStorage.setItem('users', JSON.stringify(users));\r\n        resolve(users[userIndex]);\r\n    });\r\n\r\nconst getById = (id) =>\r\n    new Promise((resolve) => {\r\n        window.setTimeout(function() {\r\n            resolve(\r\n                JSON.parse(localStorage.getItem('users')).find(\r\n                    (user) => user._id === id\r\n                )\r\n            );\r\n        }, 1000);\r\n    });\r\n\r\nexport default {\r\n    fetchAll,\r\n    update,\r\n    getById\r\n};\r\n","const qualities = {\r\n    tedious: {\r\n        _id: '67rdca3eeb7f6fgeed471198',\r\n        name: 'Нудила',\r\n        color: 'primary'\r\n    },\r\n    strange: {\r\n        _id: '67rdca3eeb7f6fgeed471100',\r\n        name: 'Странный',\r\n        color: 'secondary'\r\n    },\r\n    buller: {\r\n        _id: '67rdca3eeb7f6fgeed4711012',\r\n        name: 'Троль',\r\n        color: 'success'\r\n    },\r\n    alcoholic: {\r\n        _id: '67rdca3eeb7f6fgeed471101',\r\n        name: 'Алкоголик',\r\n        color: 'danger'\r\n    },\r\n    handsome: {\r\n        _id: '67rdca3eeb7f6fgeed471102',\r\n        name: 'Красавчик',\r\n        color: 'info'\r\n    },\r\n    uncertain: {\r\n        _id: '67rdca3eeb7f6fgeed471103',\r\n        name: 'Неуверенный',\r\n        color: 'dark'\r\n    }\r\n};\r\nconst fetchAll = () =>\r\n    new Promise((resolve) => {\r\n        window.setTimeout(function() {\r\n            resolve(qualities);\r\n        }, 2000);\r\n    });\r\n\r\nexport default {\r\n    fetchAll\r\n};\r\n","const comments = [\r\n    {\r\n        _id: '67rdca3eeb7f6fg',\r\n        userId: '67rdca3eeb7f6fgeed471815',\r\n        pageId: '67rdca3eeb7f6fgeed471815',\r\n        content: 'Равным образом начало повседневной работы по формированию позиции представляет собой интересный эксперимент проверки соответствующий условий активизации.',\r\n        created_at: '1633576399367'\r\n    },\r\n    {\r\n        _id: '67rdca3eeb7f6fgdasd',\r\n        pageId: '67rdca3eeb7f6fgeed471815',\r\n        userId: '67rdca3eeb7f6fgeed471815',\r\n        content: 'Значимость этих проблем настолько очевидна, что консультация с широким активом позволяет оценить значение систем массового участия.',\r\n        created_at: '1633573058520'\r\n    },\r\n    {\r\n        _id: '67rdca3eeb7f6fgdasbc',\r\n        pageId: '67rdca3eeb7f6fgeed471815',\r\n        userId: '67rdca3eeb7f6fgeed471815',\r\n        content: 'Не следует, однако забывать, что консультация с широким активом представляет собой интересный эксперимент проверки направлений прогрессивного развития.',\r\n        created_at: '1634394550649'\r\n    },\r\n    {\r\n        _id: '67rdca3eeb7f6fgdaasd',\r\n        pageId: '67rdca3eeb7f6fgeed471817',\r\n        userId: '67rdca3eeb7f6fgeed471815',\r\n        content: 'Идейные соображения высшего порядка, а также рамки и место обучения кадров требуют определения и уточнения существенных финансовых и административных условий.',\r\n        created_at: '1633573058520'\r\n    }\r\n];\r\nif (!localStorage.getItem('comments')) {\r\n    localStorage.setItem('comments', JSON.stringify(comments));\r\n}\r\nconst fetchAll = () =>\r\n    new Promise((resolve) => {\r\n        window.setTimeout(function() {\r\n            resolve(comments);\r\n        }, 200);\r\n    });\r\n\r\nconst fetchCommentsForUser = (userId) =>\r\n    new Promise((resolve) => {\r\n        window.setTimeout(function() {\r\n            resolve(\r\n                JSON.parse(localStorage.getItem('comments')).filter(\r\n                    (c) => c.pageId === userId\r\n                )\r\n            );\r\n        }, 200);\r\n    });\r\nconst add = (data) =>\r\n    new Promise((resolve) => {\r\n        window.setTimeout(function() {\r\n            const comments = JSON.parse(localStorage.getItem('comments'));\r\n            const newComment = {\r\n                _id: Math.random().toString(36).substr(2, 9),\r\n                created_at: Date.now(),\r\n                ...data\r\n            };\r\n            comments.push(newComment);\r\n            localStorage.setItem('comments', JSON.stringify(comments));\r\n            resolve(newComment);\r\n        }, 200);\r\n    });\r\n\r\nconst remove = (id) =>\r\n    new Promise((resolve) => {\r\n        window.setTimeout(function() {\r\n            const comments = JSON.parse(localStorage.getItem('comments'));\r\n            const newComments = comments.filter((x) => x._id !== id);\r\n            localStorage.setItem('comments', JSON.stringify(newComments));\r\n            resolve(id);\r\n        }, 200);\r\n    });\r\nexport default {\r\n    fetchAll,\r\n    fetchCommentsForUser,\r\n    add,\r\n    remove\r\n};\r\n","import users from './fake.api/user.api';\r\nimport professions from './fake.api/professions.api';\r\nimport qualities from './fake.api/qualities.api';\r\nimport comments from './fake.api/comments.api';\r\nconst API = {\r\n    users,\r\n    professions,\r\n    qualities,\r\n    comments\r\n};\r\nexport default API;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Quality = ({ color, name }) => {\n    return <span className={'badge m-1  bg-' + color}>{name}</span>;\n};\n\nQuality.propTypes = {\n    color: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired\n};\n\nexport default Quality;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Quality from './quality';\n\nconst QualitiesList = ({ qualities }) => {\n    return (\n        <>\n            {qualities.map(({ _id, ...rest }) => (\n                <Quality key={_id} {...rest} />\n            ))}\n        </>\n    );\n};\n\nQualitiesList.propTypes = {\n    qualities: PropTypes.array\n};\n\nexport default QualitiesList;\n","export function validator(data, config) {\r\n    const errors = {};\r\n    function validate(validateMethod, data, config) {\r\n        let statusValidate;\r\n        switch (validateMethod) {\r\n        case 'isRequired': {\r\n            if (typeof data === 'boolean') {\r\n                statusValidate = !data;\r\n            } else {\r\n                statusValidate = data.trim() === '';\r\n            }\r\n            break;\r\n        }\r\n        case 'isEmail': {\r\n            const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\r\n            statusValidate = !emailRegExp.test(data);\r\n            break;\r\n        }\r\n        case 'isCapitalSymbol': {\r\n            const capoitalRegExp = /[A-Z]+/g;\r\n            statusValidate = !capoitalRegExp.test(data);\r\n            break;\r\n        }\r\n        case 'isContainDigit': {\r\n            const digitRegExp = /\\d+/g;\r\n            statusValidate = !digitRegExp.test(data);\r\n            break;\r\n        }\r\n        case 'min': {\r\n            statusValidate = data.length < config.value;\r\n            break;\r\n        }\r\n        default:\r\n            break;\r\n        }\r\n        if (statusValidate) return config.message;\r\n    }\r\n    for (const fieldName in data) {\r\n        for (const validateMethod in config[fieldName]) {\r\n            const error = validate(\r\n                validateMethod,\r\n                data[fieldName],\r\n                config[fieldName][validateMethod]\r\n            );\r\n            if (error && !errors[fieldName]) {\r\n                errors[fieldName] = error;\r\n            }\r\n        }\r\n    }\r\n    return errors;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TextArea = ({ label, name, rows, value, onChange, error }) => {\r\n    const getInputClasses = () => {\r\n        return 'form-control' + (error ? ' is-invalid' : '');\r\n    };\r\n\r\n    const handleChange = ({ target }) => {\r\n        onChange({ name: target.name, value: target.value });\r\n    };\r\n    return (\r\n        <div className=\"m-4\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <div className=\"input-group has-validation\">\r\n                <textarea\r\n                    id={name}\r\n                    name={name}\r\n                    value={value}\r\n                    rows={rows}\r\n                    onChange={handleChange}\r\n                    className={getInputClasses()}\r\n                />\r\n                {error && <div className=\"invalid-feedback\">{error}</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nTextArea.propTypes = {\r\n    label: PropTypes.string,\r\n    name: PropTypes.string,\r\n    rows: PropTypes.string,\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    error: PropTypes.string\r\n};\r\nexport default TextArea;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SelectField = ({\r\n    label,\r\n    name,\r\n    value,\r\n    onChange,\r\n    defaultOption,\r\n    options,\r\n    error\r\n}) => {\r\n    const getInputClasses = () => {\r\n        return 'form-select' + (error ? ' is-invalid' : '');\r\n    };\r\n\r\n    const handleChange = ({ target }) => {\r\n        onChange({ name: target.name, value: target.value });\r\n    };\r\n\r\n    const optionsArray =\r\n        !Array.isArray(options) && typeof options === 'object'\r\n            ? Object.keys(options).map((key) => ({\r\n                _id: options[key]._id,\r\n                name: options[key].name\r\n            }))\r\n            : options;\r\n\r\n    return (\r\n        <div className=\"m-4\">\r\n            <label htmlFor=\"validationCustom04\" className=\"form-label\">\r\n                {label}\r\n            </label>\r\n            <select\r\n                onChange={handleChange}\r\n                value={value}\r\n                className={getInputClasses()}\r\n                name={name}\r\n                id=\"validationCustom04\"\r\n            >\r\n                <option disabled value=\"\">\r\n                    {defaultOption}\r\n                </option>\r\n                {optionsArray &&\r\n                    optionsArray.map((option) => (\r\n                        <option key={option._id} value={option._id}>\r\n                            {option.name}\r\n                        </option>\r\n                    ))}\r\n            </select>\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nSelectField.propTypes = {\r\n    label: PropTypes.string,\r\n    name: PropTypes.string,\r\n    value: PropTypes.string,\r\n    data: PropTypes.object,\r\n    onChange: PropTypes.func,\r\n    error: PropTypes.string,\r\n    defaultOption: PropTypes.string,\r\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array])\r\n};\r\n\r\nexport default SelectField;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { validator } from '../../utils/validator';\r\nimport TextArea from '../common/form/textArea';\r\nimport SelectField from '../common/form/selectField';\r\n\r\nconst CommentForm = ({ id, users, add }) => {\r\n    const [data, setData] = useState({ comment: '', user: '' });\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const handleChange = (target) => {\r\n        setData((prevState) => ({ ...prevState, [target.name]: target.value }));\r\n    };\r\n\r\n    const validatorConfig = {\r\n        comment: {\r\n            isRequired: {\r\n                message: 'Поле не может быть пустым'\r\n            },\r\n            min: {\r\n                message: 'Сообщение должно содержать не менее 3 символов',\r\n                value: 3\r\n            }\r\n        },\r\n        user: {\r\n            isRequired: {\r\n                message: 'Выберите пользователя'\r\n            }\r\n        }\r\n    };\r\n\r\n    const validate = () => {\r\n        const errors = validator(data, validatorConfig);\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n\r\n    const isValid = Object.keys(errors).length === 0;\r\n\r\n    const clear = () => {\r\n        setData({ comment: '', user: '' });\r\n    };\r\n\r\n    const handleTextArea = () => {\r\n        const isValid = validate();\r\n        if (!isValid) return;\r\n        const comment = {\r\n            userId: data.user,\r\n            pageId: id,\r\n            content: data.comment\r\n        };\r\n\r\n        add(comment);\r\n        clear();\r\n    };\r\n\r\n    useEffect(() => {\r\n        validate();\r\n    }, [data]);\r\n\r\n    return (\r\n        <div className=\"card mb-2\">\r\n            <div className=\"card-body\">\r\n                <div>\r\n                    <h2>Новый комментарий</h2>\r\n                    <SelectField\r\n                        label=\"\"\r\n                        defaultOption=\"Выбрать...\"\r\n                        options={users}\r\n                        name=\"user\"\r\n                        onChange={handleChange}\r\n                        value={data.user}\r\n                        error={errors.user}\r\n                    />\r\n                    <TextArea\r\n                        row={3}\r\n                        onChange={handleChange}\r\n                        label=\"Сообщение\"\r\n                        name=\"comment\"\r\n                        value={data.comment}\r\n                        error={errors.comment}\r\n                    />\r\n                    <div className=\"d-flex justify-content-end m-4\">\r\n                        <button\r\n                            onClick={handleTextArea}\r\n                            className=\"btn btn-primary\"\r\n                            disabled={!isValid}\r\n                        >\r\n                            Опубликовать\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    users: PropTypes.array.isRequired,\r\n    add: PropTypes.func\r\n};\r\n\r\nexport default CommentForm;\r\n","const addZero = (num) => {\r\n    return num < 10 ? '0' + String(num) : String(num);\r\n};\r\n\r\nconst formatPhrase = (num) => {\r\n    if (String(num)[0] === '1' && (num < 10 || num > 20)) return 'минута';\r\n    if (/[234]$/.test(String(num)) && (num < 10 || num > 20)) return 'минуты';\r\n\r\n    return 'минут';\r\n};\r\n\r\nconst getMonth = (index) => {\r\n    const months = [\r\n        'января',\r\n        'февраля',\r\n        'марта',\r\n        'апреля',\r\n        'мая',\r\n        'июня',\r\n        'июля',\r\n        'августа',\r\n        'сентября',\r\n        'октября',\r\n        'ноября',\r\n        'декабря'\r\n    ];\r\n\r\n    return months[index];\r\n};\r\n\r\nconst formatDate = (date) => {\r\n    date = typeof date === 'number' ? date : Number(date);\r\n    const diff = Date.now() - date;\r\n    const year = new Date(date).getFullYear();\r\n    const month = new Date(date).getMonth();\r\n    const day = new Date(date).getDate();\r\n    const hours = new Date(date).getHours();\r\n    const min = new Date(date).getMinutes();\r\n\r\n    if (diff < 60000) {\r\n        return 'меньше минуты назад';\r\n    } else if (diff <= 1.8e6) {\r\n        const min = Math.round(diff / 60000);\r\n        return `${min} ${formatPhrase(min)} назад`;\r\n    } else if (diff < 8.64e7) {\r\n        return `${addZero(hours)}:${addZero(min)}`;\r\n    } else if (diff < 3.154e10) {\r\n        return `${addZero(day)} ${getMonth(month)}`;\r\n    } else {\r\n        return `${addZero(day)} ${getMonth(month)} ${year} года`;\r\n    }\r\n};\r\n\r\nexport default formatDate;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport formatDate from '../../utils/formatDate';\r\n\r\nconst Comment = ({ comment, remove }) => {\r\n    const { _id, author, date, content } = comment;\r\n    return (\r\n        <div className=\"bg-light card-body mb-3\">\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <div className=\"d-flex flex-start\">\r\n                        <img\r\n                            src={`https://avatars.dicebear.com/api/avataaars/${(\r\n                                Math.random() + 1\r\n                            )\r\n                                .toString(36)\r\n                                .substring(7)}.svg`}\r\n                            className=\"rounded-circle shadow-1-strong me-3\"\r\n                            alt=\"avatar\"\r\n                            width=\"65\"\r\n                            height=\"65\"\r\n                        />\r\n                        <div className=\"flex-grow-1 flex-shrink-1\">\r\n                            <div className=\"mb-4\">\r\n                                <div className=\"d-flex justify-content-between align-items-center\">\r\n                                    <div className=\"mb-1 d-flex align-items-center flex-wrap\">\r\n                                        <span className=\"me-1\">{author}</span>\r\n                                        <span className=\"small\">\r\n                                            | {formatDate(date)}\r\n                                        </span>\r\n                                    </div>\r\n                                    <button\r\n                                        onClick={() => remove(_id)}\r\n                                        className=\"btn btn-sm text-primary d-flex align-items-center\"\r\n                                    >\r\n                                        <i className=\"bi bi-x-lg\"></i>\r\n                                    </button>\r\n                                </div>\r\n                                <p className=\"small mb-0 pe-4\">{content}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nComment.propTypes = {\r\n    comment: PropTypes.object.isRequired,\r\n    remove: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Comment;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Comment from './comment';\r\n\r\nconst Comments = ({ users, comments, remove }) => {\r\n    const [modifiedComments, setModifiedComments] = useState();\r\n\r\n    useEffect(() => {\r\n        if (comments) {\r\n            const modifiedComments = comments.map((comment) => ({\r\n                _id: comment._id,\r\n                content: comment.content,\r\n                date: comment.created_at,\r\n                author: users.find((user) => user._id === comment.userId).name\r\n            }));\r\n            setModifiedComments(modifiedComments);\r\n        }\r\n    }, [comments]);\r\n\r\n    if (!comments.length) return null;\r\n\r\n    if (!modifiedComments) return <h4>Loading...</h4>;\r\n\r\n    const sortedComments = modifiedComments.sort((a, b) => b.date - a.date);\r\n\r\n    return (\r\n        <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n                <h2>Комментарии</h2>\r\n                <hr />\r\n                {sortedComments.map((comment) => (\r\n                    <Comment\r\n                        key={comment._id}\r\n                        comment={comment}\r\n                        remove={remove}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nComments.propTypes = {\r\n    users: PropTypes.array.isRequired,\r\n    comments: PropTypes.array.isRequired,\r\n    remove: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Comments;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport api from '../../api';\r\nimport QualitiesList from './qualities/qualitiesList';\r\nimport CommentForm from './commentForm';\r\nimport Comments from './comments';\r\n\r\nconst UserCard = ({ user }) => {\r\n    const [users, setUsers] = useState();\r\n    const [comments, setComments] = useState('');\r\n    const { _id, name, profession, rate, completedMeetings, qualities } = user;\r\n\r\n    useEffect(() => {\r\n        api.users.fetchAll().then((data) => setUsers(data));\r\n        api.comments\r\n            .fetchCommentsForUser(_id)\r\n            .then((data) => setComments(data));\r\n    }, []);\r\n\r\n    const addComment = (comment) => {\r\n        api.comments.add(comment);\r\n        api.comments\r\n            .fetchCommentsForUser(_id)\r\n            .then((data) => setComments(data));\r\n    };\r\n\r\n    const removeComment = (id) => {\r\n        api.comments.remove(id);\r\n        api.comments\r\n            .fetchCommentsForUser(_id)\r\n            .then((data) => setComments(data));\r\n    };\r\n\r\n    return (\r\n        <div className=\"row gutters-sm\">\r\n            <div className=\"col-md-4 mb-3\">\r\n                <div className=\"card mb-3\">\r\n                    <div className=\"card-body\">\r\n                        <Link\r\n                            to={`/users/${_id}/edit`}\r\n                            className=\"position-absolute top-0 end-0 btn btn-sm\"\r\n                        >\r\n                            <i className=\"bi bi-gear\"></i>\r\n                        </Link>\r\n                        <div className=\"d-flex flex-column align-items-center text-center position-relative\">\r\n                            <img\r\n                                src={`https://avatars.dicebear.com/api/avataaars/${(\r\n                                    Math.random() + 1\r\n                                )\r\n                                    .toString(36)\r\n                                    .substring(7)}.svg`}\r\n                                className=\"rounded-circle shadow-1-strong me-3\"\r\n                                alt=\"avatar\"\r\n                                width=\"150\"\r\n                                height=\"150\"\r\n                            />\r\n                            <div className=\"mt-3\">\r\n                                <h4>{name}</h4>\r\n                                <p className=\"text-secondary mb-1\">\r\n                                    {profession.name}\r\n                                </p>\r\n                                <div className=\"text-muted\">\r\n                                    <i\r\n                                        className=\"bi bi-caret-down-fill text-primary\"\r\n                                        role=\"button\"\r\n                                    ></i>\r\n                                    <i\r\n                                        className=\"bi bi-caret-up text-secondary\"\r\n                                        role=\"button\"\r\n                                    ></i>\r\n                                    <span className=\"ms-2\">{rate}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card mb-3\">\r\n                    <div className=\"card-body d-flex flex-column justify-content-center text-center\">\r\n                        <h5 className=\"card-title\">\r\n                            <span>Качества</span>\r\n                        </h5>\r\n                        <p className=\"card-text\">\r\n                            <QualitiesList qualities={qualities} />\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card mb-3\">\r\n                    <div className=\"card-body d-flex flex-column justify-content-center text-center\">\r\n                        <h5 className=\"card-title\">\r\n                            <span>Завершенные встречи</span>\r\n                        </h5>\r\n                        <h1 className=\"display-1\">{completedMeetings}</h1>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-8\">\r\n                {users\r\n                    ? (\r\n                        <CommentForm id={_id} users={users} add={addComment} />\r\n                    )\r\n                    : (\r\n                        <h4>Loading...</h4>\r\n                    )}\r\n                {users && comments\r\n                    ? (\r\n                        <Comments\r\n                            id={_id}\r\n                            users={users}\r\n                            comments={comments}\r\n                            remove={removeComment}\r\n                        />\r\n                    )\r\n                    : (\r\n                        <h4>Loading...</h4>\r\n                    )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nUserCard.propTypes = {\r\n    user: PropTypes.object.isRequired\r\n};\r\n\r\nexport default UserCard;\r\n","import React, { useState } from 'react';\r\nimport RingLoader from 'react-spinners/RingLoader';\r\nimport { css } from '@emotion/react';\r\n\r\nconst Loader = () => {\r\n    const [loading] = useState(true);\r\n\r\n    const override = css`\r\n        display: block;\r\n        margin: 0 auto;\r\n        margin-top: 150px;\r\n    `;\r\n\r\n    return (\r\n        <div className=\"sweet-loading\">\r\n            <RingLoader\r\n                color=\"#003580\"\r\n                css={override}\r\n                loading={loading}\r\n                size={100}\r\n            />\r\n        </div>\r\n    );\r\n};\r\nexport default Loader;\r\n","import UserPage from './userPage';\r\nexport default UserPage;\r\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from '../../../api';\nimport UserCard from '../../ui/userCard';\nimport Loader from '../../ui/loader';\n\nconst UserPage = () => {\n    const { userId } = useParams();\n    const [user, setUser] = useState();\n\n    useEffect(() => {\n        api.users.getById(userId).then((user) => setUser(user));\n    }, []);\n\n    return <>{user ? <UserCard user={user} /> : <Loader />}</>;\n};\n\nexport default UserPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\n    const pagesCount = Math.ceil(itemsCount / pageSize);\n    const pages = _.range(1, pagesCount + 1);\n\n    if (pagesCount === 1) return null;\n    return (\n        <nav>\n            <ul className=\"pagination\">\n                {pages.map((page) => (\n                    <li\n                        key={page}\n                        className={\n                            'page-item ' +\n                            (page === currentPage ? 'active' : '')\n                        }\n                    >\n                        <a\n                            className=\"page-link\"\n                            onClick={() => {\n                                onPageChange(page);\n                            }}\n                        >\n                            {page}\n                        </a>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    );\n};\nPagination.propTypes = {\n    itemsCount: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired,\n    currentPage: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired\n};\n\nexport default Pagination;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst GroupList = ({\n    items,\n    valueProperty,\n    contentProperty,\n    onItemSelect,\n    selectedItem\n}) => {\n    if (!Array.isArray(items)) {\n        return (\n            <ul className=\"list-group\">\n                {Object.keys(items).map((item) => (\n                    <li\n                        key={items[item][valueProperty]}\n                        className={\n                            'list-group-item' +\n                            (items[item] === selectedItem ? ' active' : '')\n                        }\n                        onClick={() => onItemSelect(items[item])}\n                        role=\"button\"\n                    >\n                        {items[item][contentProperty]}\n                    </li>\n                ))}\n            </ul>\n        );\n    }\n    return (\n        <ul className=\"list-group\">\n            {items.map((item) => (\n                <li\n                    key={item[valueProperty]}\n                    className={\n                        'list-group-item' +\n                        (item === selectedItem ? ' active' : '')\n                    }\n                    onClick={() => onItemSelect(item)}\n                    role=\"button\"\n                >\n                    {item[contentProperty]}\n                </li>\n            ))}\n        </ul>\n    );\n};\nGroupList.defaultProps = {\n    valueProperty: '_id',\n    contentProperty: 'name'\n};\nGroupList.propTypes = {\n    items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    valueProperty: PropTypes.string.isRequired,\n    contentProperty: PropTypes.string.isRequired,\n    onItemSelect: PropTypes.func,\n    selectedItem: PropTypes.object\n};\n\nexport default GroupList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nconst SearchStatus = ({ length }) => {\n    const renderPhrase = (number) => {\n        const lastOne = Number(number.toString().slice(-1));\n        if (number > 4 && number < 15) {\n            return 'человек тусанет';\n        }\n        if (lastOne === 1) return 'человек тусанет';\n        if ([2, 3, 4].indexOf(lastOne) >= 0) return 'человека тусанут';\n        return 'человек тусанет';\n    };\n    return (\n        <h2>\n            <span\n                className={'badge ' + (length > 0 ? 'bg-primary' : 'bg-danger')}\n            >\n                {length > 0\n                    ? `${length + ' ' + renderPhrase(length)}   с тобой сегодня`\n                    : 'Никто с тобой не тусанет'}\n            </span>\n        </h2>\n    );\n};\nSearchStatus.propTypes = {\n    length: PropTypes.number\n};\n\nexport default SearchStatus;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BookMark = ({ status, ...rest }) => {\n    return (\n        <button {...rest}>\n            <i className={'bi bi-bookmark' + (status ? '-heart-fill' : '')}></i>\n        </button>\n    );\n};\nBookMark.propTypes = {\n    status: PropTypes.bool\n};\n\nexport default BookMark;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nconst TableBody = ({ data, columns }) => {\n    const renderContent = (item, column) => {\n        if (columns[column].component) {\n            const component = columns[column].component;\n            if (typeof component === 'function') return component(item);\n            return component;\n        }\n        if (columns[column].path === 'rate') { return _.get(item, columns[column].path); }\n        return _.get(item, columns[column].path);\n    };\n\n    return (\n        <tbody>\n            {data.map((item) => (\n                <tr key={item._id}>\n                    {Object.keys(columns).map((column) => (\n                        <td key={column}>{renderContent(item, column)}</td>\n                    ))}\n                </tr>\n            ))}\n        </tbody>\n    );\n};\n\nTableBody.propTypes = {\n    data: PropTypes.array.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableBody;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\n    const handleSort = (item) => {\n        if (selectedSort.path === item) {\n            onSort({\n                ...selectedSort,\n                order: selectedSort.order === 'asc' ? 'desc' : 'asc'\n            });\n        } else {\n            onSort({ path: item, order: 'asc' });\n        }\n    };\n    const rendeSortArrow = (selectedSort, currentPath) => {\n        if (selectedSort.path === currentPath) {\n            if (selectedSort.order === 'asc') {\n                return <i className=\"bi bi-caret-down-fill\"></i>;\n            } else {\n                return <i className=\"bi bi-caret-up-fill\"></i>;\n            }\n        }\n        return null;\n    };\n\n    return (\n        <thead>\n            <tr>\n                {Object.keys(columns).map((column) => (\n                    <th\n                        key={column}\n                        onClick={\n                            columns[column].path\n                                ? () => handleSort(columns[column].path)\n                                : undefined\n                        }\n                        {...{ role: columns[column].path && 'button' }}\n                        scope=\"col\"\n                    >\n                        {columns[column].name}{' '}\n                        {rendeSortArrow(selectedSort, columns[column].path)}\n                    </th>\n                ))}\n            </tr>\n        </thead>\n    );\n};\nTableHeader.propTypes = {\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TableBody from './tableBody';\nimport TableHeader from './tableHeader';\n\nconst Table = ({ onSort, selectedSort, columns, data, children }) => {\n    return (\n        <table className=\"table\">\n            {children || (\n                <>\n                    <TableHeader {...{ onSort, selectedSort, columns }} />\n                    <TableBody {...{ columns, data }} />\n                </>\n            )}\n        </table>\n    );\n};\nTable.propTypes = {\n    onSort: PropTypes.func,\n    selectedSort: PropTypes.object,\n    columns: PropTypes.object,\n    data: PropTypes.array,\n    children: PropTypes.array\n};\n\nexport default Table;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BookMark from '../common/bookmark';\nimport QualitiesList from '../ui/qualities/qualitiesList';\nimport Table from '../common/table/table';\nimport { Link } from 'react-router-dom';\n\nconst UserTable = ({\n    users,\n    onSort,\n    selectedSort,\n    onToggleBookMark,\n    onDelete,\n    ...rest\n}) => {\n    const columns = {\n        name: {\n            path: 'name',\n            name: 'Имя',\n            component: (user) => (\n                <Link to={`/users/${user._id}`}>{user.name}</Link>\n            )\n        },\n        qualities: {\n            name: 'Качества',\n            component: (user) => <QualitiesList qualities={user.qualities} />\n        },\n        professions: { path: 'profession.name', name: 'Профессия' },\n        completedMeetings: {\n            path: 'completedMeetings',\n            name: 'Встретился, раз'\n        },\n        rate: { path: 'rate', name: 'Оценка' },\n        bookmark: {\n            path: 'bookmark',\n            name: 'Избранное',\n            component: (user) => (\n                <BookMark\n                    status={user.bookmark}\n                    onClick={() => onToggleBookMark(user._id)}\n                />\n            )\n        },\n        delete: {\n            component: (user) => (\n                <button\n                    onClick={() => onDelete(user._id)}\n                    className=\"btn btn-danger\"\n                >\n                    delete\n                </button>\n            )\n        }\n    };\n    return (\n        <Table\n            onSort={onSort}\n            selectedSort={selectedSort}\n            columns={columns}\n            data={users}\n        />\n    );\n};\n\nUserTable.propTypes = {\n    users: PropTypes.array.isRequired,\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    onToggleBookMark: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired\n};\n\nexport default UserTable;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SearchInput = ({ value, onChange }) => {\r\n    return (\r\n        <div className=\"input-group shadow mb-3\">\r\n            <input\r\n                className=\"form-control\"\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                value={value}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nSearchInput.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchInput;\r\n","import UsersListPage from './usersListPage';\r\nexport default UsersListPage;\r\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { paginate } from '../../../utils/paginate';\nimport Pagination from '../../common/pagination';\nimport api from '../../../api';\nimport GroupList from '../../common/groupList';\nimport SearchStatus from '../../ui/searchStatus';\nimport UserTable from '../../ui/usersTable';\nimport Loader from '../../ui/loader';\nimport _ from 'lodash';\nimport SearchInput from '../../searchInput';\n\nconst UsersListPage = () => {\n    const [currentPage, setCurrentPage] = useState(1);\n    const [professions, setProfession] = useState();\n    const [selectedProf, setSelectedProf] = useState();\n    const [sortBy, setSortBy] = useState({ path: 'name', order: 'asc' });\n    const [users, setUsers] = useState();\n    const [searchUsers, setSearchUsers] = useState('');\n\n    const pageSize = 8;\n\n    useEffect(() => {\n        api.users.fetchAll().then((data) => setUsers(data));\n    }, []);\n\n    useEffect(() => {\n        if (searchUsers) clearFilter();\n    }, [searchUsers]);\n\n    const clearFilter = () => {\n        setSelectedProf();\n    };\n\n    const handleDelete = (userId) => {\n        setUsers(users.filter((user) => user._id !== userId));\n    };\n    const handleToggleBookMark = (id) => {\n        const newArray = users.map((user) => {\n            if (user._id === id) {\n                return { ...user, bookmark: !user.bookmark };\n            }\n            return user;\n        });\n        setUsers(newArray);\n    };\n\n    useEffect(() => {\n        api.professions.fetchAll().then((data) => setProfession(data));\n    }, []);\n\n    useEffect(() => {\n        setCurrentPage(1);\n    }, [selectedProf]);\n\n    const handleProfessionSelect = (item) => {\n        setSelectedProf(item);\n        setSearchUsers('');\n    };\n\n    const handlePageChange = (pageIndex) => {\n        setCurrentPage(pageIndex);\n    };\n    const handleSort = (item) => {\n        setSortBy(item);\n    };\n\n    const handleSearch = ({ target }) => {\n        setSearchUsers(target.value);\n    };\n\n    if (users) {\n        const filteredUsers = selectedProf\n            ? users.filter(\n                (user) =>\n                    JSON.stringify(user.profession) ===\n                    JSON.stringify(selectedProf)\n            )\n            : searchUsers\n                ? users.filter((user) =>\n                    user.name.toLowerCase().includes(searchUsers.toLowerCase().trim())\n                )\n                : users;\n\n        const count = filteredUsers.length;\n        const sortedUsers = _.orderBy(\n            filteredUsers,\n            [sortBy.path],\n            [sortBy.order]\n        );\n        const usersCrop = paginate(sortedUsers, currentPage, pageSize);\n        const clearFilter = () => {\n            setSelectedProf();\n        };\n\n        return (\n            <div className=\"d-flex\">\n                {professions && (\n                    <div className=\"d-flex flex-column flex-shrink-0 p-3\">\n                        <GroupList\n                            selectedItem={selectedProf}\n                            items={professions}\n                            onItemSelect={handleProfessionSelect}\n                        />\n                        <button\n                            className=\"btn btn-secondary mt-2\"\n                            onClick={clearFilter}\n                        >\n                            {' '}\n                            Очистить\n                        </button>\n                    </div>\n                )}\n                <div className=\"d-flex flex-column\">\n                    <SearchStatus length={count} />\n                    <SearchInput value={searchUsers} onChange={handleSearch} />\n                    {count > 0 && (\n                        <UserTable\n                            users={usersCrop}\n                            onSort={handleSort}\n                            selectedSort={sortBy}\n                            onDelete={handleDelete}\n                            onToggleBookMark={handleToggleBookMark}\n                        />\n                    )}\n                    <div className=\"d-flex justify-content-center\">\n                        <Pagination\n                            itemsCount={count}\n                            pageSize={pageSize}\n                            currentPage={currentPage}\n                            onPageChange={handlePageChange}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    return <Loader />;\n};\nUsersListPage.propTypes = {\n    users: PropTypes.array\n};\n\nexport default UsersListPage;\n","import _ from 'lodash';\n\nexport function paginate(items, pageNumber, pageSize) {\n    const startIndex = (pageNumber - 1) * pageSize;\n    return _(items).slice(startIndex).take(pageSize).value();\n}\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TextField = ({ label, type, name, value, onChange, error }) => {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const handleChange = ({ target }) => {\r\n        onChange({ name: target.name, value: target.value });\r\n    };\r\n\r\n    const getInputClasses = () => {\r\n        return 'form-control' + (error ? ' is-invalid' : '');\r\n    };\r\n\r\n    const toggleShowPassword = () => {\r\n        setShowPassword((prevState) => !prevState);\r\n    };\r\n\r\n    return (\r\n        <div className=\"m-4\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <div className=\"input-group has-validation\">\r\n                <input\r\n                    className={getInputClasses()}\r\n                    type={showPassword ? 'text' : type}\r\n                    id={name}\r\n                    name={name}\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                />\r\n                {type === 'password' && (\r\n                    <button\r\n                        className=\"btn btn-outline-secondary\"\r\n                        type=\"button\"\r\n                        onClick={toggleShowPassword}\r\n                    >\r\n                        <i\r\n                            className={\r\n                                'bi bi-eye' + (showPassword ? '-slash' : '')\r\n                            }\r\n                        ></i>\r\n                    </button>\r\n                )}\r\n                {error && <div className=\"invalid-feedback\">{error}</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nTextField.defaultProps = {\r\n    type: 'text'\r\n};\r\nTextField.propTypes = {\r\n    label: PropTypes.string,\r\n    type: PropTypes.string,\r\n    name: PropTypes.string,\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    error: PropTypes.string\r\n};\r\n\r\nexport default TextField;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst RadioField = ({ label, options, name, onChange, value }) => {\r\n    const handleChange = ({ target }) => {\r\n        onChange({ name: target.name, value: target.value });\r\n    };\r\n\r\n    return (\r\n        <div className=\"m-4\">\r\n            <label className=\"form-label d-block\">{label}</label>\r\n            <div>\r\n                {options.map((option) => (\r\n                    <div\r\n                        key={`${option.name}_${option.value}`}\r\n                        className=\"form-check form-check-inline\"\r\n                    >\r\n                        <input\r\n                            className=\"form-check-input\"\r\n                            onChange={handleChange}\r\n                            type=\"radio\"\r\n                            name={name}\r\n                            checked={option.value === value}\r\n                            id={`${option.name}_${option.value}`}\r\n                            value={option.value}\r\n                        />\r\n                        <label\r\n                            className=\"form-check-label\"\r\n                            htmlFor={`${option.name}_${option.value}`}\r\n                        >\r\n                            {option.name}\r\n                        </label>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nRadioField.propTypes = {\r\n    label: PropTypes.string,\r\n    options: PropTypes.array,\r\n    name: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    value: PropTypes.string\r\n};\r\n\r\nexport default RadioField;\r\n","import React from 'react';\r\nimport Select from 'react-select';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MultiSelectField = ({ options, onChange, name, label, defaultValue }) => {\r\n    const optionsArray =\r\n        !Array.isArray(options) && typeof options === 'object'\r\n            ? Object.keys(options).map((key) => ({\r\n                value: options[key]._id,\r\n                label: options[key].name\r\n            }))\r\n            : options;\r\n\r\n    const handleChange = (value) => {\r\n        onChange({ name: name, value });\r\n    };\r\n\r\n    return (\r\n        <div className=\"m-4\">\r\n            <label className=\"form-label\">{label}</label>\r\n            <Select\r\n                isMulti\r\n                closeMenuOnSelect={false}\r\n                options={optionsArray}\r\n                className=\"basic-multi-select\"\r\n                classNamePrefix=\"select\"\r\n                onChange={handleChange}\r\n                name={name}\r\n                defaultValue={defaultValue}\r\n            />\r\n        </div>\r\n    );\r\n};\r\nMultiSelectField.propTypes = {\r\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n    onChange: PropTypes.func,\r\n    name: PropTypes.string,\r\n    label: PropTypes.string,\r\n    defaultValue: PropTypes.array\r\n};\r\n\r\nexport default MultiSelectField;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport api from '../../api/index';\r\nimport { validator } from '../../utils/validator';\r\nimport TextField from '../common/form/textField';\r\nimport SelectField from '../common/form/selectField';\r\nimport RadioField from '../common/form/radioField';\r\nimport MultiSelectField from '../common/form/multiSelectField';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst EditForm = ({ user }) => {\r\n    const [data, setData] = useState({\r\n        name: user.name,\r\n        email: user.email || '',\r\n        profession: user.profession._id,\r\n        gender: user.gender || 'male',\r\n        qualities: user.qualities.map((quality) => ({\r\n            value: quality._id,\r\n            label: quality.name\r\n        }))\r\n    });\r\n\r\n    const [qualities, setQualities] = useState();\r\n    const [professions, setProfessions] = useState();\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect(() => {\r\n        api.professions.fetchAll().then((data) => setProfessions(data));\r\n        api.qualities.fetchAll().then((data) => setQualities(data));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        validate();\r\n    }, [data]);\r\n\r\n    const handleChange = (target) => {\r\n        setData((prevState) => ({ ...prevState, [target.name]: target.value }));\r\n    };\r\n\r\n    const validatorConfig = {\r\n        name: {\r\n            isRequired: {\r\n                message: 'Имя обязателено для заполнения'\r\n            },\r\n            min: {\r\n                message: 'Имя должно содержать не менее 3 символов',\r\n                value: 3\r\n            }\r\n        },\r\n        email: {\r\n            isRequired: {\r\n                message: 'Электронная почта обязательна для заполнения'\r\n            },\r\n            isEmail: {\r\n                message: 'Email введен не корректно'\r\n            }\r\n        },\r\n        profession: {\r\n            isRequired: {\r\n                message: 'Пoле выбора профессии обязателено для заполнения'\r\n            }\r\n        }\r\n    };\r\n\r\n    const validate = () => {\r\n        const errors = validator(data, validatorConfig);\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n\r\n    const isValid = Object.keys(errors).length === 0;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const isValid = validate();\r\n        if (!isValid) return;\r\n\r\n        const [profession] = professions.filter(\r\n            (profession) => profession._id === data.profession\r\n        );\r\n        const qualityIds = data.qualities.map((quality) => quality.value);\r\n        const updatedQualities = Object.values(qualities).filter((quality) =>\r\n            qualityIds.includes(quality._id)\r\n        );\r\n        const updatedData = {\r\n            ...data,\r\n            profession,\r\n            qualities: updatedQualities\r\n        };\r\n        api.users.update(user._id, updatedData);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Link to={`/users/${user._id}`}>\r\n                <button className=\"btn btn-primary m-4\">Назад</button>\r\n            </Link>\r\n            <h3 className=\"mb-4 text-center\">Редактировать данные</h3>\r\n            <form onSubmit={handleSubmit}>\r\n                <TextField\r\n                    label=\"Имя\"\r\n                    name=\"name\"\r\n                    value={data.name}\r\n                    onChange={handleChange}\r\n                    error={errors.name}\r\n                />\r\n                <TextField\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    value={data.email}\r\n                    onChange={handleChange}\r\n                    error={errors.email}\r\n                />\r\n                <SelectField\r\n                    label=\"Выберите профессию\"\r\n                    defaultOption=\"Выбрать...\"\r\n                    name=\"profession\"\r\n                    options={professions}\r\n                    onChange={handleChange}\r\n                    value={data.profession}\r\n                    error={errors.profession}\r\n                />\r\n                <RadioField\r\n                    label=\"Выберите пол\"\r\n                    options={[\r\n                        { name: 'Мужской', value: 'male' },\r\n                        { name: 'Женский', value: 'female' },\r\n                        { name: 'Другое', value: 'other' }\r\n                    ]}\r\n                    value={data.gender}\r\n                    name=\"gender\"\r\n                    onChange={handleChange}\r\n                />\r\n                <MultiSelectField\r\n                    name=\"qualities\"\r\n                    label=\"Выберите качества\"\r\n                    defaultOption=\"Выбрать...\"\r\n                    defaultValue={data.qualities}\r\n                    options={qualities}\r\n                    onChange={handleChange}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary w-100 mx-auto\"\r\n                    disabled={!isValid || !professions}\r\n                >\r\n                    Обновить\r\n                </button>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nEditForm.propTypes = {\r\n    user: PropTypes.object\r\n};\r\n\r\nexport default EditForm;\r\n","import EditUserPage from './editUserPage';\r\n\r\nexport default EditUserPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport api from '../../../api';\r\nimport EditForm from '../../ui/editForm';\r\nimport Loader from '../../ui/loader';\r\n\r\nconst EditUserPage = () => {\r\n    const { userId } = useParams();\r\n    const [user, setUser] = useState();\r\n\r\n    useEffect(() => {\r\n        api.users.getById(userId).then((data) => setUser(data));\r\n    }, []);\r\n\r\n    return <>{user ? <EditForm user={user} /> : <Loader />}</>;\r\n};\r\n\r\nexport default EditUserPage;\r\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport UserPage from '../components/page/userPage';\nimport UsersListPage from '../components/page/usersListPage';\nimport EditUserPage from '../components/page/editUserPage';\n\nconst Users = () => {\n    const { userId, edit } = useParams();\n\n    return (\n        <>\n            {userId && edit\n                ? (\n                    <EditUserPage />\n                )\n                : userId\n                    ? (\n                        <UserPage />\n                    )\n                    : (\n                        <UsersListPage />\n                    )}\n        </>\n    );\n};\n\nexport default Users;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CheckBoxField = ({ name, value, onChange, children, error }) => {\r\n    const handleChange = () => {\r\n        onChange({ name: name, value: !value });\r\n    };\r\n\r\n    const getInputClasses = () => {\r\n        return 'form-check-input' + (error ? ' is-invalid' : '');\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-check m-4\">\r\n            <input\r\n                onChange={handleChange}\r\n                className={getInputClasses()}\r\n                type=\"checkbox\"\r\n                value=\"\"\r\n                checked={value}\r\n                id={name}\r\n            />\r\n            <label className=\"form-check-label is-invalid\" htmlFor={name}>\r\n                {children}\r\n            </label>\r\n            {error && (\r\n                <div className=\"checkbox-invalid-feedback invalid-feedback ps-0\">\r\n                    {error}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\nCheckBoxField.propTypes = {\r\n    name: PropTypes.string,\r\n    value: PropTypes.bool,\r\n    onChange: PropTypes.func,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ]),\r\n    error: PropTypes.string\r\n};\r\n\r\nexport default CheckBoxField;\r\n","import React, { useState, useEffect } from 'react';\r\n// import { validator } from '../../utils/validator';\r\nimport TextField from '../common/form/textField';\r\nimport CheckBoxField from '../common/form/checkBoxField';\r\nimport * as yup from 'yup';\r\nconst LoginForm = () => {\r\n    const [data, setData] = useState({\r\n        email: '',\r\n        password: '',\r\n        stayOn: false\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const handleChange = (target) => {\r\n        setData((prevState) => ({ ...prevState, [target.name]: target.value }));\r\n    };\r\n\r\n    const schema = yup.object().shape({\r\n        password: yup\r\n            .string()\r\n            .required('Пароль обязателен для заполнения')\r\n            .matches(\r\n                /(?=.*[A-Z])/,\r\n                'Пароль должен содержать хотя бы одну заглавную букву'\r\n            )\r\n            .matches(\r\n                /(?=.*[0-9])/,\r\n                'Пароль должен содержать хотя бы одно число'\r\n            )\r\n            .matches(\r\n                /(?=.*[!@#$%^&*])/,\r\n                'Пароль должен содержать один из специальных символов !@#$%^&*'\r\n            )\r\n            .matches(\r\n                /(?=.{8,})/,\r\n                'Пароль должен состоять минимум из 8 символов'\r\n            ),\r\n        email: yup\r\n            .string()\r\n            .required('Электронная почта обязательна для заполнения')\r\n            .email('Email введен некоректно')\r\n    });\r\n\r\n    // const validatorConfig = {\r\n    //     email: {\r\n    //         isRequired: {\r\n    //             message: 'Электронная почта обязательна для заполнения'\r\n    //         },\r\n    //         isEmail: {\r\n    //             message: 'Email введен некоректно'\r\n    //         }\r\n    //     },\r\n    //     password: {\r\n    //         isRequired: {\r\n    //             message: 'Пароль обязателен для заполнения'\r\n    //         },\r\n    //         isCapitalSymbol: {\r\n    //             message: 'Пароль должен содержать хотя бы одну заглавную букву'\r\n    //         },\r\n    //         isContainDigit: {\r\n    //             message: 'Пароль должен содержать хотя бы одно число'\r\n    //         },\r\n    //         min: {\r\n    //             message: 'Пароль должен состоять минимум из 8 символов',\r\n    //             value: 8\r\n    //         }\r\n    //     }\r\n    // };\r\n\r\n    useEffect(() => {\r\n        validate();\r\n    }, [data]);\r\n\r\n    const validate = () => {\r\n        // const errors = validator(data, validatorConfig);\r\n\r\n        schema\r\n            .validate(data)\r\n            .then(() => setErrors({}))\r\n            .catch((err) => setErrors({ [err.path]: err.message }));\r\n\r\n        // setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n\r\n    const isValid = Object.keys(errors).length === 0;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const isValid = validate();\r\n        if (!isValid) return;\r\n        console.log(data);\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <TextField\r\n                label=\"Электронная почта\"\r\n                name=\"email\"\r\n                value={data.email}\r\n                onChange={handleChange}\r\n                error={errors.email}\r\n            />\r\n            <TextField\r\n                label=\"Пароль\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={data.password}\r\n                onChange={handleChange}\r\n                error={errors.password}\r\n            />\r\n            <CheckBoxField\r\n                value={data.stayOn}\r\n                onChange={handleChange}\r\n                name=\"stayOn\"\r\n            >\r\n                Оставаться в системе\r\n            </CheckBoxField>\r\n            <button\r\n                className=\"btn btn-primary w-100 mx-auto\"\r\n                type=\"submit\"\r\n                disabled={!isValid}\r\n            >\r\n                Submit\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { validator } from '../../utils/validator';\r\nimport TextField from '../common/form/textField';\r\nimport api from '../../api';\r\nimport SelectField from '../common/form/selectField';\r\nimport RadioField from '../common/form/radioField';\r\nimport MultiSelectField from '../common/form/multiSelectField';\r\nimport CheckBoxField from '../common/form/checkBoxField';\r\n\r\nconst RegisterForm = () => {\r\n    const [data, setData] = useState({\r\n        email: '',\r\n        password: '',\r\n        profession: '',\r\n        sex: 'male',\r\n        qualities: [],\r\n        licence: false\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const [professions, setProfession] = useState();\r\n\r\n    const [qualities, setQualities] = useState({});\r\n\r\n    useEffect(() => {\r\n        api.professions.fetchAll().then((data) => setProfession(data));\r\n        api.qualities.fetchAll().then((data) => setQualities(data));\r\n    }, []);\r\n\r\n    const handleChange = (target) => {\r\n        setData((prevState) => ({ ...prevState, [target.name]: target.value }));\r\n    };\r\n\r\n    const validatorConfig = {\r\n        email: {\r\n            isRequired: {\r\n                message: 'Электронная почта обязательна для заполнения'\r\n            },\r\n            isEmail: {\r\n                message: 'Email введен некоректно'\r\n            }\r\n        },\r\n        password: {\r\n            isRequired: {\r\n                message: 'Пароль обязателен для заполнения'\r\n            },\r\n            isCapitalSymbol: {\r\n                message: 'Пароль должен содержать хотя бы одну заглавную букву'\r\n            },\r\n            isContainDigit: {\r\n                message: 'Пароль должен содержать хотя бы одно число'\r\n            },\r\n            min: {\r\n                message: 'Пароль должен состоять минимум из 8 символов',\r\n                value: 8\r\n            }\r\n        },\r\n        profession: {\r\n            isRequired: {\r\n                message: 'Обязательно выберите вашу профессию'\r\n            }\r\n        },\r\n        licence: {\r\n            isRequired: {\r\n                message: 'Вы не можете использовать наше приложение без подтверждения лицензионного соглашения'\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        validate();\r\n    }, [data]);\r\n\r\n    const validate = () => {\r\n        const errors = validator(data, validatorConfig);\r\n\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n\r\n    const isValid = Object.keys(errors).length === 0;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const isValid = validate();\r\n        if (!isValid) return;\r\n        console.log(data);\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <TextField\r\n                label=\"Электронная почта\"\r\n                name=\"email\"\r\n                value={data.email}\r\n                onChange={handleChange}\r\n                error={errors.email}\r\n            />\r\n            <TextField\r\n                label=\"Пароль\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={data.password}\r\n                onChange={handleChange}\r\n                error={errors.password}\r\n            />\r\n            <SelectField\r\n                label=\"Выберите профессию\"\r\n                defaultOption=\"Выбрать...\"\r\n                name=\"profession\"\r\n                options={professions}\r\n                onChange={handleChange}\r\n                value={data.profession}\r\n                error={errors.profession}\r\n            />\r\n            <RadioField\r\n                options={[\r\n                    { name: 'Male', value: 'male' },\r\n                    { name: 'Female', value: 'female' },\r\n                    { name: 'Other', value: 'other' }\r\n                ]}\r\n                value={data.sex}\r\n                name=\"sex\"\r\n                onChange={handleChange}\r\n                label=\"Выберите ваш пол\"\r\n            />\r\n            <MultiSelectField\r\n                options={qualities}\r\n                onChange={handleChange}\r\n                name=\"qulities\"\r\n                // defaultValue={data.qualities}\r\n            />\r\n            <CheckBoxField\r\n                value={data.licence}\r\n                onChange={handleChange}\r\n                name=\"licence\"\r\n                defaultValue={data.licence}\r\n                error={errors.licence}\r\n            >\r\n                <a>Подтвердить лицензионное соглашение</a>\r\n            </CheckBoxField>\r\n            <button\r\n                className=\"btn btn-primary w-100 mx-auto\"\r\n                type=\"submit\"\r\n                disabled={!isValid}\r\n                label=\"Выберите ваши качества\"\r\n            >\r\n                Submit\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\nexport default RegisterForm;\r\n","import React, { useState } from 'react';\nimport { useParams } from 'react-router';\nimport LoginForm from '../components/ui/loginForm';\nimport RegisterForm from '../components/ui/registerForm';\n\nconst Login = () => {\n    const { type } = useParams();\n    const [formType, setFormType] = useState(type === 'register' ? type : 'login');\n\n    const toggleFormType = () => {\n        setFormType((prev) => prev === 'register' ? 'login' : 'register');\n    };\n\n    return (\n        <>\n            <div className=\"container mt-5\">\n                <div className=\"row\">\n                    <div className=\"col-md-6 offset-md-3 shadow p-4\">\n                        {formType === 'register'\n                            ? (\n                                <>\n                                    <h3 className=\"mb-4\">Register</h3>\n                                    <RegisterForm />\n                                    <p>\n                                    Already have account?\n                                        <a role=\"button\" onClick={toggleFormType}>\n                                        Sign in\n                                        </a>\n                                    </p>\n                                </>\n                            )\n                            : (\n                                <>\n                                    <h3 className=\"mb-4\">Login</h3>\n                                    <LoginForm />\n                                    <p>\n                                    Dont have account?\n                                        <a role=\"button\" onClick={toggleFormType}>\n                                        Sign Up\n                                        </a>\n                                    </p>\n                                </>\n                            )}\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Login;\n","import React from 'react';\n\nconst Main = () => {\n    return <h1> Main Page</h1>;\n};\n\nexport default Main;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nconst NavBar = () => {\n    return (\n        <ul className=\"nav\">\n            <li className=\"nav-item\">\n                <Link className=\"nav-link \" aria-current=\"page\" to=\"/\">\n                    Main\n                </Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link className=\"nav-link \" aria-current=\"page\" to=\"/login\">\n                    Login\n                </Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link className=\"nav-link \" aria-current=\"page\" to=\"/users\">\n                    Users\n                </Link>\n            </li>\n        </ul>\n    );\n};\n\nexport default NavBar;\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nimport Users from './layouts/users';\nimport Login from './layouts/login';\nimport Main from './layouts/main';\nimport NavBar from './components/ui/navBar';\n\nfunction App() {\n    return (\n        <div>\n            <NavBar />\n            <Switch>\n                <Route path=\"/users/:userId?/:edit?\" component={Users} />\n                <Route path=\"/login/:type?\" component={Login} />\n                <Route path=\"/\" exact component={Main} />\n                <Redirect to=\"/\" />\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './app/App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}